(()=>{"use strict";var t={285:(t,n,e)=>{e.d(n,{Z:()=>u});var r=e(537),a=e.n(r),o=e(645),i=e.n(o),A=e(667),s=e.n(A),c=new URL(e(782),e.b),d=i()(a()),l=s()(c);d.push([t.id,`/* DUE DATE PICKER CONTAINER (The main container styling in modal.css */\n\n.date-picker-container {\n   display: flex;\n   justify-content: center;\n   align-items: center;\n}\n\n/* Hide the default input field & set width/height for overall container */\n.date-picker-container input[type="date"] {\n\tappearance: none;\n\t-webkit-appearance: none;\n\t-moz-appearance: none;\n\twidth: 20px; \n\theight: 20px;\n\tpadding: 0;\n\tborder: none;\n\tbackground: transparent;\n\toutline: none;\n}\n\n/* Style the calendar icon (Set background to cover entire input) */\ninput[type="date"]::-webkit-calendar-picker-indicator {\n\tbackground: url(${l}) center/cover no-repeat; \n\twidth: 100%;\n\theight: 100%;\n\tcursor: pointer;\n}\n`,"",{version:3,sources:["webpack://./src/styles/date.css"],names:[],mappings:"AAAA,uEAAuE;;AAEvE;GACG,aAAa;GACb,uBAAuB;GACvB,mBAAmB;AACtB;;AAEA,0EAA0E;AAC1E;CACC,gBAAgB;CAChB,wBAAwB;CACxB,qBAAqB;CACrB,WAAW;CACX,YAAY;CACZ,UAAU;CACV,YAAY;CACZ,uBAAuB;CACvB,aAAa;AACd;;AAEA,mEAAmE;AACnE;CACC,0EAAgE;CAChE,WAAW;CACX,YAAY;CACZ,eAAe;AAChB",sourcesContent:['/* DUE DATE PICKER CONTAINER (The main container styling in modal.css */\n\n.date-picker-container {\n   display: flex;\n   justify-content: center;\n   align-items: center;\n}\n\n/* Hide the default input field & set width/height for overall container */\n.date-picker-container input[type="date"] {\n\tappearance: none;\n\t-webkit-appearance: none;\n\t-moz-appearance: none;\n\twidth: 20px; \n\theight: 20px;\n\tpadding: 0;\n\tborder: none;\n\tbackground: transparent;\n\toutline: none;\n}\n\n/* Style the calendar icon (Set background to cover entire input) */\ninput[type="date"]::-webkit-calendar-picker-indicator {\n\tbackground: url("../assets/calendar.svg") center/cover no-repeat; \n\twidth: 100%;\n\theight: 100%;\n\tcursor: pointer;\n}\n'],sourceRoot:""}]);const u=d},724:(t,n,e)=>{e.d(n,{Z:()=>A});var r=e(537),a=e.n(r),o=e(645),i=e.n(o)()(a());i.push([t.id,":root {\n\t--add-task-btn-color: invert(43%) sepia(57%) saturate(7479%) hue-rotate(354deg) brightness(95%) contrast(87%);\n\t--add-task-btn-desktop-color: rgb(54, 141, 218);\n\t--add-task-btn-desktop-color-hover: rgb(0, 98, 164);\n\t--cancel-task-btn-desktop-color: rgb(227, 67, 67);\n\t--cancel-task-btn-desktop-color-hover: rgb(177, 24, 11);\n\t--cancel-task-btn-color: invert(66%) sepia(3%) saturate(409%) hue-rotate(179deg) brightness(94%) contrast(91%);\n\t--priority-high-color: invert(23%) sepia(89%) saturate(6106%) hue-rotate(344deg) brightness(93%) contrast(114%);\n\t--priority-medium-color: invert(69%) sepia(42%) saturate(3413%) hue-rotate(5deg) brightness(112%) contrast(98%);\n\t--priority-low-color: invert(65%) sepia(87%) saturate(1264%) hue-rotate(136deg) brightness(103%) contrast(98%);\n\t--priority-none-color: invert(0%) sepia(1%) saturate(7499%) hue-rotate(338deg) brightness(93%) contrast(95%);\n}\n\n/* PROJECT MODAL */\n.hidden {\n\tdisplay: none;\n}\n.project-modal-background {\n\tposition: absolute;\n\ttop: 0;\n\theight: 100%;\n\twidth: 100%;\n\tbackground-color: rgb(0, 0, 0, 0.5);\n\tz-index: 1;\n}\n.project-modal-container {\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tposition: absolute;\n\tbackground-color: rgb(255, 255, 255);\n\twidth: clamp(300px, 80vw, 600px);\n\tborder-radius: 10px;\n}\n.modal-btn-container {\n\twidth: 50vw;\n}\n.project-modal-container header {\n\tborder-radius: 10px 10px 0 0;\n\theight: 50px;\n\twidth: 100%;\n}\n.project-modal-container form {\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 30px;\n\twidth: 100%;\n}\n.project-modal-container form input {\n\tmargin-top: 5px;\n\toutline: none;\n\tappearance: none;\n\tborder-radius: 5px;\n\tborder: 1px solid black;\n\tpadding: 5px;\n}\n.modal-btn-container {\n\tmargin-top: 30px;\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tgap: 10px;\n}\n\n/* Task Modal */\n.task-modal-container {\n\twidth: 100%;\n}\n.task-modal-container form {\n\tborder: 1.5px solid rgb(174, 174, 174);\n\tborder-radius: 10px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tgap: 10px;\n\twidth: 100%;\n\tpadding: 20px 10px 5px;\n}\n.task-modal-container form input {\n\toutline: none;\n\tfont-size: 1.03rem;\n\twidth: 100%;\n\tappearance: none;\n\tborder: none;\n}\n.task-modal-container .error-message {\n\tmargin-left: 5px;\n\tmargin-top: -10px;\n\twidth: 100%;\n\tcolor: red;\n\tdisplay: none;\n}\n.task-modal-container .bottom-tabs {\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n}\n/* Due date and priority buttons */\n.option-container {\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 10px;\n}\n.option-container img {\n\twidth: 25px;\n}\n.submit-close-container img {\n\twidth: 35px;\n}\n.due-date-container,\n.priority-container {\n\tposition: relative;\n\tpadding: 0px 10px;\n\tborder: 1px solid black;\n\tborder-radius: 10px;\n\tdisplay: flex;\n\talign-self: center;\n\tjustify-content: center;\n\tgap: 5px;\n}\n.option-container p {\n\tcursor: pointer;\n\tline-height: 2;\n\tmargin: 0;\n}\n/* Priority Container */\n.dropdown-container {\n\toverflow: hidden;\n\tposition: absolute;\n\ttop: 32px;\n\tbackground-color: rgb(249, 249, 249);\n\tborder-radius: 12px;\n\twidth: 200px;\n\tdisplay: none;\n\tbox-shadow: 0px 0px 10px 0px rgb(207 207 207);\n\tz-index: 1;\n}\n.dropdown-container ul {\n\tlist-style: none;\n\tmargin: 0;\n\tpadding: 0;\n\tdisplay: flex;\n\tflex-direction: column;\n}\n.dropdown-container li {\n\tcursor: pointer;\n\tpadding: 10px;\n\tdisplay: flex;\n\tgap: 10px;\n\talign-items: center;\n}\n.dropdown-container li img {\n\twidth: 27px;\n}\n.dropdown-container li p {\n\tline-height: 1;\n}\n.dropdown-container li:first-child img {\n\tfilter: var(--priority-high-color);\n}\n.dropdown-container li:nth-child(2) img {\n\tfilter: var(--priority-medium-color);\n}\n.dropdown-container li:last-child img {\n\tfilter: var(--priority-low-color);\n}\n.priority-container .dropdown-container li:hover {\n\tbackground-color: #e8e8e8;\n\tcolor: black;\n}\n.priority-container:focus {\n\tcolor: rgb(58, 58, 58);\n\tborder: 1px solid rgb(165, 165, 165);\n\tbackground-color: rgb(230, 230, 230);\n}\n.priority-container .dropdown-container.active {\n\tdisplay: block;\n}\n\n.submit-close-container {\n\tcursor: pointer;\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 10px;\n\tjustify-content: flex-end;\n\tmargin-top: 15px;\n\tborder-top: 1.5px solid #a7a7a7;\n\tpadding-top: 5px;\n}\n/* add task and close task btn [DESKTOP]*/\n.submit-close-container.desktop {\n\tdisplay: none;\n\tgap: 15px;\n}\n.submit-close-container.desktop button {\n\tappearance: none;\n\tmargin: 0;\n\tfont-size: 1.1rem;\n\tborder: none;\n\tborder-radius: 7px;\n\tpadding: 7px 13px;\n\ttransition: all 0.3s ease-in-out;\n}\n.submit-close-container.desktop .submit-task-btn {\n\tcolor: white;\n\tbackground-color: var(--add-task-btn-desktop-color);\n}\n.submit-close-container.desktop .cancel-task-btn {\n\tcolor: white;\n\tbackground-color: var(--cancel-task-btn-desktop-color);\n}\n.submit-close-container.desktop .submit-task-btn:hover {\n\tbackground-color: var(--add-task-btn-desktop-color-hover);\n}\n.submit-close-container.desktop .cancel-task-btn:hover {\n\tbackground-color: var(--cancel-task-btn-desktop-color-hover);\n}\n.submit-close-container.mobile .submit-task-btn {\n\tfilter: var(--add-task-btn-color);\n}\n.submit-close-container.mobile .cancel-task-btn {\n\tfilter: var(--cancel-task-btn-color);\n}\n\n@media screen and (min-width: 396px) {\n\t.task-modal-container .bottom-tabs {\n\t\tflex-direction: row;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t}\n\t/* Change the bottom submit tabs to align with the option tabs */\n\t.submit-close-container {\n\t\tmargin-top: 0;\n\t\tjustify-content: flex-start;\n\t\tmargin-top: 0;\n\t\tborder-top: none;\n\t\tpadding-top: 0;\n\t}\n\t.task-modal-container form {\n\t\tpadding: 20px 10px 10px;\n\t}\n}\n\n@media screen and (min-width: 832px) {\n\t.submit-close-container.desktop {\n\t\tdisplay: flex;\n\t}\n\t.submit-close-container.mobile {\n\t\tdisplay: none;\n\t}\n\t.task-modal-container form {\n\t\tpadding: 15px 15px;\n\t}\n}\n","",{version:3,sources:["webpack://./src/styles/modal.css"],names:[],mappings:"AAAA;CACC,6GAA6G;CAC7G,+CAA+C;CAC/C,mDAAmD;CACnD,iDAAiD;CACjD,uDAAuD;CACvD,8GAA8G;CAC9G,+GAA+G;CAC/G,+GAA+G;CAC/G,8GAA8G;CAC9G,4GAA4G;AAC7G;;AAEA,kBAAkB;AAClB;CACC,aAAa;AACd;AACA;CACC,kBAAkB;CAClB,MAAM;CACN,YAAY;CACZ,WAAW;CACX,mCAAmC;CACnC,UAAU;AACX;AACA;CACC,QAAQ;CACR,SAAS;CACT,gCAAgC;CAChC,kBAAkB;CAClB,oCAAoC;CACpC,gCAAgC;CAChC,mBAAmB;AACpB;AACA;CACC,WAAW;AACZ;AACA;CACC,4BAA4B;CAC5B,YAAY;CACZ,WAAW;AACZ;AACA;CACC,aAAa;CACb,sBAAsB;CACtB,aAAa;CACb,WAAW;AACZ;AACA;CACC,eAAe;CACf,aAAa;CACb,gBAAgB;CAChB,kBAAkB;CAClB,uBAAuB;CACvB,YAAY;AACb;AACA;CACC,gBAAgB;CAChB,WAAW;CACX,aAAa;CACb,yBAAyB;CACzB,SAAS;AACV;;AAEA,eAAe;AACf;CACC,WAAW;AACZ;AACA;CACC,sCAAsC;CACtC,mBAAmB;CACnB,aAAa;CACb,sBAAsB;CACtB,mBAAmB;CACnB,uBAAuB;CACvB,SAAS;CACT,WAAW;CACX,sBAAsB;AACvB;AACA;CACC,aAAa;CACb,kBAAkB;CAClB,WAAW;CACX,gBAAgB;CAChB,YAAY;AACb;AACA;CACC,gBAAgB;CAChB,iBAAiB;CACjB,WAAW;CACX,UAAU;CACV,aAAa;AACd;AACA;CACC,WAAW;CACX,aAAa;CACb,sBAAsB;AACvB;AACA,kCAAkC;AAClC;CACC,aAAa;CACb,mBAAmB;CACnB,SAAS;AACV;AACA;CACC,WAAW;AACZ;AACA;CACC,WAAW;AACZ;AACA;;CAEC,kBAAkB;CAClB,iBAAiB;CACjB,uBAAuB;CACvB,mBAAmB;CACnB,aAAa;CACb,kBAAkB;CAClB,uBAAuB;CACvB,QAAQ;AACT;AACA;CACC,eAAe;CACf,cAAc;CACd,SAAS;AACV;AACA,uBAAuB;AACvB;CACC,gBAAgB;CAChB,kBAAkB;CAClB,SAAS;CACT,oCAAoC;CACpC,mBAAmB;CACnB,YAAY;CACZ,aAAa;CACb,6CAA6C;CAC7C,UAAU;AACX;AACA;CACC,gBAAgB;CAChB,SAAS;CACT,UAAU;CACV,aAAa;CACb,sBAAsB;AACvB;AACA;CACC,eAAe;CACf,aAAa;CACb,aAAa;CACb,SAAS;CACT,mBAAmB;AACpB;AACA;CACC,WAAW;AACZ;AACA;CACC,cAAc;AACf;AACA;CACC,kCAAkC;AACnC;AACA;CACC,oCAAoC;AACrC;AACA;CACC,iCAAiC;AAClC;AACA;CACC,yBAAyB;CACzB,YAAY;AACb;AACA;CACC,sBAAsB;CACtB,oCAAoC;CACpC,oCAAoC;AACrC;AACA;CACC,cAAc;AACf;;AAEA;CACC,eAAe;CACf,aAAa;CACb,mBAAmB;CACnB,SAAS;CACT,yBAAyB;CACzB,gBAAgB;CAChB,+BAA+B;CAC/B,gBAAgB;AACjB;AACA,yCAAyC;AACzC;CACC,aAAa;CACb,SAAS;AACV;AACA;CACC,gBAAgB;CAChB,SAAS;CACT,iBAAiB;CACjB,YAAY;CACZ,kBAAkB;CAClB,iBAAiB;CACjB,gCAAgC;AACjC;AACA;CACC,YAAY;CACZ,mDAAmD;AACpD;AACA;CACC,YAAY;CACZ,sDAAsD;AACvD;AACA;CACC,yDAAyD;AAC1D;AACA;CACC,4DAA4D;AAC7D;AACA;CACC,iCAAiC;AAClC;AACA;CACC,oCAAoC;AACrC;;AAEA;CACC;EACC,mBAAmB;EACnB,mBAAmB;EACnB,8BAA8B;CAC/B;CACA,gEAAgE;CAChE;EACC,aAAa;EACb,2BAA2B;EAC3B,aAAa;EACb,gBAAgB;EAChB,cAAc;CACf;CACA;EACC,uBAAuB;CACxB;AACD;;AAEA;CACC;EACC,aAAa;CACd;CACA;EACC,aAAa;CACd;CACA;EACC,kBAAkB;CACnB;AACD",sourcesContent:[":root {\n\t--add-task-btn-color: invert(43%) sepia(57%) saturate(7479%) hue-rotate(354deg) brightness(95%) contrast(87%);\n\t--add-task-btn-desktop-color: rgb(54, 141, 218);\n\t--add-task-btn-desktop-color-hover: rgb(0, 98, 164);\n\t--cancel-task-btn-desktop-color: rgb(227, 67, 67);\n\t--cancel-task-btn-desktop-color-hover: rgb(177, 24, 11);\n\t--cancel-task-btn-color: invert(66%) sepia(3%) saturate(409%) hue-rotate(179deg) brightness(94%) contrast(91%);\n\t--priority-high-color: invert(23%) sepia(89%) saturate(6106%) hue-rotate(344deg) brightness(93%) contrast(114%);\n\t--priority-medium-color: invert(69%) sepia(42%) saturate(3413%) hue-rotate(5deg) brightness(112%) contrast(98%);\n\t--priority-low-color: invert(65%) sepia(87%) saturate(1264%) hue-rotate(136deg) brightness(103%) contrast(98%);\n\t--priority-none-color: invert(0%) sepia(1%) saturate(7499%) hue-rotate(338deg) brightness(93%) contrast(95%);\n}\n\n/* PROJECT MODAL */\n.hidden {\n\tdisplay: none;\n}\n.project-modal-background {\n\tposition: absolute;\n\ttop: 0;\n\theight: 100%;\n\twidth: 100%;\n\tbackground-color: rgb(0, 0, 0, 0.5);\n\tz-index: 1;\n}\n.project-modal-container {\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tposition: absolute;\n\tbackground-color: rgb(255, 255, 255);\n\twidth: clamp(300px, 80vw, 600px);\n\tborder-radius: 10px;\n}\n.modal-btn-container {\n\twidth: 50vw;\n}\n.project-modal-container header {\n\tborder-radius: 10px 10px 0 0;\n\theight: 50px;\n\twidth: 100%;\n}\n.project-modal-container form {\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 30px;\n\twidth: 100%;\n}\n.project-modal-container form input {\n\tmargin-top: 5px;\n\toutline: none;\n\tappearance: none;\n\tborder-radius: 5px;\n\tborder: 1px solid black;\n\tpadding: 5px;\n}\n.modal-btn-container {\n\tmargin-top: 30px;\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tgap: 10px;\n}\n\n/* Task Modal */\n.task-modal-container {\n\twidth: 100%;\n}\n.task-modal-container form {\n\tborder: 1.5px solid rgb(174, 174, 174);\n\tborder-radius: 10px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tgap: 10px;\n\twidth: 100%;\n\tpadding: 20px 10px 5px;\n}\n.task-modal-container form input {\n\toutline: none;\n\tfont-size: 1.03rem;\n\twidth: 100%;\n\tappearance: none;\n\tborder: none;\n}\n.task-modal-container .error-message {\n\tmargin-left: 5px;\n\tmargin-top: -10px;\n\twidth: 100%;\n\tcolor: red;\n\tdisplay: none;\n}\n.task-modal-container .bottom-tabs {\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n}\n/* Due date and priority buttons */\n.option-container {\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 10px;\n}\n.option-container img {\n\twidth: 25px;\n}\n.submit-close-container img {\n\twidth: 35px;\n}\n.due-date-container,\n.priority-container {\n\tposition: relative;\n\tpadding: 0px 10px;\n\tborder: 1px solid black;\n\tborder-radius: 10px;\n\tdisplay: flex;\n\talign-self: center;\n\tjustify-content: center;\n\tgap: 5px;\n}\n.option-container p {\n\tcursor: pointer;\n\tline-height: 2;\n\tmargin: 0;\n}\n/* Priority Container */\n.dropdown-container {\n\toverflow: hidden;\n\tposition: absolute;\n\ttop: 32px;\n\tbackground-color: rgb(249, 249, 249);\n\tborder-radius: 12px;\n\twidth: 200px;\n\tdisplay: none;\n\tbox-shadow: 0px 0px 10px 0px rgb(207 207 207);\n\tz-index: 1;\n}\n.dropdown-container ul {\n\tlist-style: none;\n\tmargin: 0;\n\tpadding: 0;\n\tdisplay: flex;\n\tflex-direction: column;\n}\n.dropdown-container li {\n\tcursor: pointer;\n\tpadding: 10px;\n\tdisplay: flex;\n\tgap: 10px;\n\talign-items: center;\n}\n.dropdown-container li img {\n\twidth: 27px;\n}\n.dropdown-container li p {\n\tline-height: 1;\n}\n.dropdown-container li:first-child img {\n\tfilter: var(--priority-high-color);\n}\n.dropdown-container li:nth-child(2) img {\n\tfilter: var(--priority-medium-color);\n}\n.dropdown-container li:last-child img {\n\tfilter: var(--priority-low-color);\n}\n.priority-container .dropdown-container li:hover {\n\tbackground-color: #e8e8e8;\n\tcolor: black;\n}\n.priority-container:focus {\n\tcolor: rgb(58, 58, 58);\n\tborder: 1px solid rgb(165, 165, 165);\n\tbackground-color: rgb(230, 230, 230);\n}\n.priority-container .dropdown-container.active {\n\tdisplay: block;\n}\n\n.submit-close-container {\n\tcursor: pointer;\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 10px;\n\tjustify-content: flex-end;\n\tmargin-top: 15px;\n\tborder-top: 1.5px solid #a7a7a7;\n\tpadding-top: 5px;\n}\n/* add task and close task btn [DESKTOP]*/\n.submit-close-container.desktop {\n\tdisplay: none;\n\tgap: 15px;\n}\n.submit-close-container.desktop button {\n\tappearance: none;\n\tmargin: 0;\n\tfont-size: 1.1rem;\n\tborder: none;\n\tborder-radius: 7px;\n\tpadding: 7px 13px;\n\ttransition: all 0.3s ease-in-out;\n}\n.submit-close-container.desktop .submit-task-btn {\n\tcolor: white;\n\tbackground-color: var(--add-task-btn-desktop-color);\n}\n.submit-close-container.desktop .cancel-task-btn {\n\tcolor: white;\n\tbackground-color: var(--cancel-task-btn-desktop-color);\n}\n.submit-close-container.desktop .submit-task-btn:hover {\n\tbackground-color: var(--add-task-btn-desktop-color-hover);\n}\n.submit-close-container.desktop .cancel-task-btn:hover {\n\tbackground-color: var(--cancel-task-btn-desktop-color-hover);\n}\n.submit-close-container.mobile .submit-task-btn {\n\tfilter: var(--add-task-btn-color);\n}\n.submit-close-container.mobile .cancel-task-btn {\n\tfilter: var(--cancel-task-btn-color);\n}\n\n@media screen and (min-width: 396px) {\n\t.task-modal-container .bottom-tabs {\n\t\tflex-direction: row;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t}\n\t/* Change the bottom submit tabs to align with the option tabs */\n\t.submit-close-container {\n\t\tmargin-top: 0;\n\t\tjustify-content: flex-start;\n\t\tmargin-top: 0;\n\t\tborder-top: none;\n\t\tpadding-top: 0;\n\t}\n\t.task-modal-container form {\n\t\tpadding: 20px 10px 10px;\n\t}\n}\n\n@media screen and (min-width: 832px) {\n\t.submit-close-container.desktop {\n\t\tdisplay: flex;\n\t}\n\t.submit-close-container.mobile {\n\t\tdisplay: none;\n\t}\n\t.task-modal-container form {\n\t\tpadding: 15px 15px;\n\t}\n}\n"],sourceRoot:""}]);const A=i},342:(t,n,e)=>{e.d(n,{Z:()=>A});var r=e(537),a=e.n(r),o=e(645),i=e.n(o)()(a());i.push([t.id,'/** OVERALL TASK LIST **/\n.task-list {\n\tmargin-top: 10px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: flex-start;\n\tjustify-content: center;\n\twidth: 100%;\n\tgap: 10px;\n}\n\n/** Individual Tasks **/\n.task-info-container {\n\twidth: 100%;\n\tpadding: 5px;\n\tborder-bottom: 1px solid rgb(192, 192, 192);\n\tfont-size: 1.1rem;\n\tdisplay: flex;\n\tflex-flow: column;\n\tgap: 5px;\n}\n.task-info-container p {\n\tmargin: 0;\n}\n.task-info-container .task-title {\n\tfont-size: 1.2rem;\n}\n.task-info-container .task-description {\n\tcolor:rgb(83, 83, 83);\n}\n.task-top-container {\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n}\n.task-inner-right-container {\n\tdisplay: flex;\n\tgap: 10px;\n\talign-items: center;\n}\n\n\n/* priority flags in tasks */\nimg.priority-flag {\n\twidth: 30px;\n}\n/* Fills in flag in modal and tasks */\nimg.flag-high {\n\tfilter: var(--priority-high-color);\n}\nimg.flag-medium {\n\tfilter: var(--priority-medium-color);\n}\nimg.flag-low {\n\tfilter: var(--priority-low-color);\n}\n\n\n/** "Add Task" button **/\n.add-task-btn {\n\tcursor: pointer;\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: flex-start;\n}\n.add-task-btn img {\n\twidth: 30px;\n}',"",{version:3,sources:["webpack://./src/styles/task.css"],names:[],mappings:"AAAA,wBAAwB;AACxB;CACC,gBAAgB;CAChB,aAAa;CACb,sBAAsB;CACtB,uBAAuB;CACvB,uBAAuB;CACvB,WAAW;CACX,SAAS;AACV;;AAEA,uBAAuB;AACvB;CACC,WAAW;CACX,YAAY;CACZ,2CAA2C;CAC3C,iBAAiB;CACjB,aAAa;CACb,iBAAiB;CACjB,QAAQ;AACT;AACA;CACC,SAAS;AACV;AACA;CACC,iBAAiB;AAClB;AACA;CACC,qBAAqB;AACtB;AACA;GACG,aAAa;GACb,mBAAmB;GACnB,8BAA8B;AACjC;AACA;CACC,aAAa;CACb,SAAS;CACT,mBAAmB;AACpB;;;AAGA,4BAA4B;AAC5B;CACC,WAAW;AACZ;AACA,qCAAqC;AACrC;CACC,kCAAkC;AACnC;AACA;CACC,oCAAoC;AACrC;AACA;CACC,iCAAiC;AAClC;;;AAGA,wBAAwB;AACxB;CACC,eAAe;CACf,WAAW;CACX,aAAa;CACb,2BAA2B;AAC5B;AACA;CACC,WAAW;AACZ",sourcesContent:['/** OVERALL TASK LIST **/\n.task-list {\n\tmargin-top: 10px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: flex-start;\n\tjustify-content: center;\n\twidth: 100%;\n\tgap: 10px;\n}\n\n/** Individual Tasks **/\n.task-info-container {\n\twidth: 100%;\n\tpadding: 5px;\n\tborder-bottom: 1px solid rgb(192, 192, 192);\n\tfont-size: 1.1rem;\n\tdisplay: flex;\n\tflex-flow: column;\n\tgap: 5px;\n}\n.task-info-container p {\n\tmargin: 0;\n}\n.task-info-container .task-title {\n\tfont-size: 1.2rem;\n}\n.task-info-container .task-description {\n\tcolor:rgb(83, 83, 83);\n}\n.task-top-container {\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n}\n.task-inner-right-container {\n\tdisplay: flex;\n\tgap: 10px;\n\talign-items: center;\n}\n\n\n/* priority flags in tasks */\nimg.priority-flag {\n\twidth: 30px;\n}\n/* Fills in flag in modal and tasks */\nimg.flag-high {\n\tfilter: var(--priority-high-color);\n}\nimg.flag-medium {\n\tfilter: var(--priority-medium-color);\n}\nimg.flag-low {\n\tfilter: var(--priority-low-color);\n}\n\n\n/** "Add Task" button **/\n.add-task-btn {\n\tcursor: pointer;\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: flex-start;\n}\n.add-task-btn img {\n\twidth: 30px;\n}'],sourceRoot:""}]);const A=i},641:(t,n,e)=>{e.d(n,{Z:()=>A});var r=e(537),a=e.n(r),o=e(645),i=e.n(o)()(a());i.push([t.id,':root {\n\t--nav-bar-background: rgb(237, 237, 236);\n\t--top-nav-background: rgb(226, 106, 82);\n\t--footer-background: rgb(219, 219, 219);\n\t--nav-tab-focus-color: rgb(238, 156, 54);\n}\n* {\n\tbox-sizing: border-box;\n}\n\nhtml,\nbody {\n\theight: 100%;\n\tmargin: 0;\n\tmin-height: 100vh;\n}\nbody {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.add-task-btn.hidden {\n\tdisplay: none;\n}\n\n/* ********************** */\n/*** HEADER ***/\nheader {\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 20px;\n\tbackground-color: var(--top-nav-background);\n\twidth: 100vw;\n\tpadding: 20px 20px;\n}\nh1 {\n\tmargin: 0;\n}\nimg#todo-icon{\n\tdisplay: none;\n\twidth: 50px;\n}\n/** Hamburger **/\n.hamburger {\n\tmargin-left: auto;\n\tdisplay: block;\n\tcursor: pointer;\n}\n.hamburger .bar {\n\tdisplay: block;\n\tbackground-color: white;\n\twidth: 25px;\n\theight: 3px;\n\tmargin: 5px;\n\ttransition: all 0.5s ease-in-out;\n}\n.hamburger.active .bar:nth-child(1) {\n\ttransform: translateY(8px) rotate(45deg);\n}\n.hamburger.active .bar:nth-child(2) {\n\topacity: 0;\n}\n.hamburger.active .bar:nth-child(3) {\n\ttransform: translateY(-8px) rotate(-45deg);\n}\n/** Search Bar AREA **/\n.search-container {\n\tcursor: pointer;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 5px;\n\tbackground-color: white;\n\tborder-radius: 15px;\n}\n.search-container img {\n\twidth: 30px;\n}\n.search-bar-input {\n\toutline: none;\n\tpadding: 0;\n\tfont-size: 1.1rem;\n\tmargin-left: 5px;\n\twidth: 100%;\n\tborder: none;\n\tborder-radius: 10px;\n\tdisplay: flex;\n\talign-items: center;\n\tline-height: 30px;\n}\n/* Disable for Mobile view */\n.container1 {\n\tdisplay: none;\n}\n.container2 {\n\tdisplay: block;\n\tposition: relative;\n\twidth: 40px;\n\theight: 40px;\n}\n/* \n * All the color goes into the search-container. \n * We will use the container as the background and then the search-bar-input\n * to expand out and in when the container2 is focused-in.\n*/\n.container2 .search-container {\n\tposition: absolute;\n\tborder-radius: 50px;\n}\n.container2 .search-bar-input {\n\tmargin: 0;\n\twidth: 0;\n\ttransition: all 0.3s ease-in-out;\n}\n.container2 .search-button {\n\theight: 25px;\n\twidth: 25px;\n\tborder-radius: 50%;\n}\n/* \n* To prevent container from shrinking when click again, \n* we need to add .search-bar-input\'s focus. Also the padding is so the blinking\n* "|" line wont disappear into the borders\n*/\n.container2:focus .search-bar-input,\n.container2 .search-bar-input:focus,\n.container2 .search-bar-input:not(:placeholder-shown) {\n\tpadding: 0 6px;\n\tvisibility: visible;\n\twidth: 37vw;\n}\n\n/* ********************** */\n/*** MAIN ***/\nmain {\n\theight: 100%;\n\tflex: 1;\n\tdisplay: flex;\n}\n/* NAVBAR */\nmain .side-nav {\n\tpadding-top: 20px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tbackground-color: var(--nav-bar-background);\n\twidth: 0;\n\toverflow-y: auto;\n\ttransition: all 0.3s ease-in-out;\n\tposition: fixed;\n\tz-index: 1;\n\theight: 100%;\n}\nmain .side-nav.active {\n\twidth: 80vw;\n}\n.navtab {\n\tcursor: pointer;\n\tmargin: 10px 10px;\n\tborder: 2px solid rgb(255, 255, 255);\n\tborder-radius: 10px;\n\tbackground-color: rgb(255, 255, 255);\n\tpadding: 10px;\n\twidth: 80%;\n}\n\n.navtab:focus,\n.navtab:hover {\n\toutline: 2px solid var(--nav-tab-focus-color); \n}\n/* Project SideNav  */\n.project-header {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tgap: 10px;\n\twidth: 100%;\n}\n.project-container {\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tgap: 15px;\n}\n.project-header .new-project-btn {\n\tcursor: pointer;\n\tborder: 1px solid black;\n\tborder-radius: 50%;\n\twidth: 30px;\n\theight: 30px;\n\ttransition: all 0.5s ease-in-out;\n}\n.project-header .new-project-btn:hover {\n\ttransform: rotate(360deg);\n}\n.project-link-div {\n\tcursor: pointer;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tfont-size: 1.2rem;\n\tborder: 1px solid rgb(138, 138, 138);\n\tborder-radius: 10px;\n\twidth: 80%;\n\theight: 30px;\n\tpadding: 5px;\n\ttransition: all 0.3s ease-in-out;\n}\n.project-link-div:focus {\n\tborder: 1px solid rgb(25, 25, 25);\n}\n.project-link-div p {\n\tfont-size: 1.2rem;\n\tflex: 1;\n\toverflow: hidden;\n}\n.project-link-div .editIcon {\n\twidth: 23px;\n}\n.project-link-div .deleteIcon {\n\tposition: relative;\n\ttop: 2px;\n\twidth: 23px;\n}\n/* MAIN Container */\nmain .main-content {\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\twidth: 100%;\n\tpadding: 30px;\n\tbackground-color: rgb(255, 255, 255);\n\toverflow-y: auto;\n}\n.taskInfoHeader {\n\twidth: 100%;\n\theight: 30px;\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: center;\n}\n\n/* ********************** */\n/*** FOOTER ***/\nfooter {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 10px;\n\twidth: 100vw;\n\theight: 40px;\n\tbackground-color: var(--footer-background);\n\tz-index: 1;\n}\nfooter img {\n\twidth: 30px;\n\ttransition: all 0.5s ease-in-out;\n}\nfooter img:hover {\n\ttransform: rotate(360deg);\n}\n\n@media screen and (min-width: 695px) {\n\t/* HEADER */\n\theader {\n\t\tgap: 30px;\n\t\tpadding: 15px 20px;\n\t}\n\timg#todo-icon{\n\t\tdisplay: block;\n\t\tmargin-right: -15px;\n\t}\n\t.search-container {\n\t\twidth: 30vw;\n\t}\n\t.container1 {\n\t\tdisplay: flex;\n\t}\n\t.container2 {\n\t\tdisplay: none;\n\t}\n\t.hamburger {\n\t\tdisplay: none;\n\t}\n\t/* MAIN */\n\tmain .side-nav,\n\tmain .side-nav.active {\n\t\twidth: 300px;\n\t\tposition: static;\n\t}\n}\n',"",{version:3,sources:["webpack://./src/styles/website.css"],names:[],mappings:"AAAA;CACC,wCAAwC;CACxC,uCAAuC;CACvC,uCAAuC;CACvC,wCAAwC;AACzC;AACA;CACC,sBAAsB;AACvB;;AAEA;;CAEC,YAAY;CACZ,SAAS;CACT,iBAAiB;AAClB;AACA;CACC,aAAa;CACb,sBAAsB;AACvB;;AAEA;CACC,aAAa;AACd;;AAEA,2BAA2B;AAC3B,eAAe;AACf;CACC,aAAa;CACb,mBAAmB;CACnB,SAAS;CACT,2CAA2C;CAC3C,YAAY;CACZ,kBAAkB;AACnB;AACA;CACC,SAAS;AACV;AACA;CACC,aAAa;CACb,WAAW;AACZ;AACA,gBAAgB;AAChB;CACC,iBAAiB;CACjB,cAAc;CACd,eAAe;AAChB;AACA;CACC,cAAc;CACd,uBAAuB;CACvB,WAAW;CACX,WAAW;CACX,WAAW;CACX,gCAAgC;AACjC;AACA;CACC,wCAAwC;AACzC;AACA;CACC,UAAU;AACX;AACA;CACC,0CAA0C;AAC3C;AACA,sBAAsB;AACtB;CACC,eAAe;CACf,aAAa;CACb,mBAAmB;CACnB,uBAAuB;CACvB,YAAY;CACZ,uBAAuB;CACvB,mBAAmB;AACpB;AACA;CACC,WAAW;AACZ;AACA;CACC,aAAa;CACb,UAAU;CACV,iBAAiB;CACjB,gBAAgB;CAChB,WAAW;CACX,YAAY;CACZ,mBAAmB;CACnB,aAAa;CACb,mBAAmB;CACnB,iBAAiB;AAClB;AACA,4BAA4B;AAC5B;CACC,aAAa;AACd;AACA;CACC,cAAc;CACd,kBAAkB;CAClB,WAAW;CACX,YAAY;AACb;AACA;;;;CAIC;AACD;CACC,kBAAkB;CAClB,mBAAmB;AACpB;AACA;CACC,SAAS;CACT,QAAQ;CACR,gCAAgC;AACjC;AACA;CACC,YAAY;CACZ,WAAW;CACX,kBAAkB;AACnB;AACA;;;;CAIC;AACD;;;CAGC,cAAc;CACd,mBAAmB;CACnB,WAAW;AACZ;;AAEA,2BAA2B;AAC3B,aAAa;AACb;CACC,YAAY;CACZ,OAAO;CACP,aAAa;AACd;AACA,WAAW;AACX;CACC,iBAAiB;CACjB,aAAa;CACb,sBAAsB;CACtB,mBAAmB;CACnB,2CAA2C;CAC3C,QAAQ;CACR,gBAAgB;CAChB,gCAAgC;CAChC,eAAe;CACf,UAAU;CACV,YAAY;AACb;AACA;CACC,WAAW;AACZ;AACA;CACC,eAAe;CACf,iBAAiB;CACjB,oCAAoC;CACpC,mBAAmB;CACnB,oCAAoC;CACpC,aAAa;CACb,UAAU;AACX;;AAEA;;CAEC,6CAA6C;AAC9C;AACA,qBAAqB;AACrB;CACC,aAAa;CACb,mBAAmB;CACnB,uBAAuB;CACvB,SAAS;CACT,WAAW;AACZ;AACA;CACC,WAAW;CACX,aAAa;CACb,sBAAsB;CACtB,mBAAmB;CACnB,SAAS;AACV;AACA;CACC,eAAe;CACf,uBAAuB;CACvB,kBAAkB;CAClB,WAAW;CACX,YAAY;CACZ,gCAAgC;AACjC;AACA;CACC,yBAAyB;AAC1B;AACA;CACC,eAAe;CACf,aAAa;CACb,8BAA8B;CAC9B,mBAAmB;CACnB,iBAAiB;CACjB,oCAAoC;CACpC,mBAAmB;CACnB,UAAU;CACV,YAAY;CACZ,YAAY;CACZ,gCAAgC;AACjC;AACA;CACC,iCAAiC;AAClC;AACA;CACC,iBAAiB;CACjB,OAAO;CACP,gBAAgB;AACjB;AACA;CACC,WAAW;AACZ;AACA;CACC,kBAAkB;CAClB,QAAQ;CACR,WAAW;AACZ;AACA,mBAAmB;AACnB;CACC,OAAO;CACP,aAAa;CACb,sBAAsB;CACtB,mBAAmB;CACnB,WAAW;CACX,aAAa;CACb,oCAAoC;CACpC,gBAAgB;AACjB;AACA;CACC,WAAW;CACX,YAAY;CACZ,aAAa;CACb,2BAA2B;CAC3B,mBAAmB;AACpB;;AAEA,2BAA2B;AAC3B,eAAe;AACf;CACC,aAAa;CACb,uBAAuB;CACvB,mBAAmB;CACnB,SAAS;CACT,YAAY;CACZ,YAAY;CACZ,0CAA0C;CAC1C,UAAU;AACX;AACA;CACC,WAAW;CACX,gCAAgC;AACjC;AACA;CACC,yBAAyB;AAC1B;;AAEA;CACC,WAAW;CACX;EACC,SAAS;EACT,kBAAkB;CACnB;CACA;EACC,cAAc;EACd,mBAAmB;CACpB;CACA;EACC,WAAW;CACZ;CACA;EACC,aAAa;CACd;CACA;EACC,aAAa;CACd;CACA;EACC,aAAa;CACd;CACA,SAAS;CACT;;EAEC,YAAY;EACZ,gBAAgB;CACjB;AACD",sourcesContent:[':root {\n\t--nav-bar-background: rgb(237, 237, 236);\n\t--top-nav-background: rgb(226, 106, 82);\n\t--footer-background: rgb(219, 219, 219);\n\t--nav-tab-focus-color: rgb(238, 156, 54);\n}\n* {\n\tbox-sizing: border-box;\n}\n\nhtml,\nbody {\n\theight: 100%;\n\tmargin: 0;\n\tmin-height: 100vh;\n}\nbody {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.add-task-btn.hidden {\n\tdisplay: none;\n}\n\n/* ********************** */\n/*** HEADER ***/\nheader {\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 20px;\n\tbackground-color: var(--top-nav-background);\n\twidth: 100vw;\n\tpadding: 20px 20px;\n}\nh1 {\n\tmargin: 0;\n}\nimg#todo-icon{\n\tdisplay: none;\n\twidth: 50px;\n}\n/** Hamburger **/\n.hamburger {\n\tmargin-left: auto;\n\tdisplay: block;\n\tcursor: pointer;\n}\n.hamburger .bar {\n\tdisplay: block;\n\tbackground-color: white;\n\twidth: 25px;\n\theight: 3px;\n\tmargin: 5px;\n\ttransition: all 0.5s ease-in-out;\n}\n.hamburger.active .bar:nth-child(1) {\n\ttransform: translateY(8px) rotate(45deg);\n}\n.hamburger.active .bar:nth-child(2) {\n\topacity: 0;\n}\n.hamburger.active .bar:nth-child(3) {\n\ttransform: translateY(-8px) rotate(-45deg);\n}\n/** Search Bar AREA **/\n.search-container {\n\tcursor: pointer;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 5px;\n\tbackground-color: white;\n\tborder-radius: 15px;\n}\n.search-container img {\n\twidth: 30px;\n}\n.search-bar-input {\n\toutline: none;\n\tpadding: 0;\n\tfont-size: 1.1rem;\n\tmargin-left: 5px;\n\twidth: 100%;\n\tborder: none;\n\tborder-radius: 10px;\n\tdisplay: flex;\n\talign-items: center;\n\tline-height: 30px;\n}\n/* Disable for Mobile view */\n.container1 {\n\tdisplay: none;\n}\n.container2 {\n\tdisplay: block;\n\tposition: relative;\n\twidth: 40px;\n\theight: 40px;\n}\n/* \n * All the color goes into the search-container. \n * We will use the container as the background and then the search-bar-input\n * to expand out and in when the container2 is focused-in.\n*/\n.container2 .search-container {\n\tposition: absolute;\n\tborder-radius: 50px;\n}\n.container2 .search-bar-input {\n\tmargin: 0;\n\twidth: 0;\n\ttransition: all 0.3s ease-in-out;\n}\n.container2 .search-button {\n\theight: 25px;\n\twidth: 25px;\n\tborder-radius: 50%;\n}\n/* \n* To prevent container from shrinking when click again, \n* we need to add .search-bar-input\'s focus. Also the padding is so the blinking\n* "|" line wont disappear into the borders\n*/\n.container2:focus .search-bar-input,\n.container2 .search-bar-input:focus,\n.container2 .search-bar-input:not(:placeholder-shown) {\n\tpadding: 0 6px;\n\tvisibility: visible;\n\twidth: 37vw;\n}\n\n/* ********************** */\n/*** MAIN ***/\nmain {\n\theight: 100%;\n\tflex: 1;\n\tdisplay: flex;\n}\n/* NAVBAR */\nmain .side-nav {\n\tpadding-top: 20px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tbackground-color: var(--nav-bar-background);\n\twidth: 0;\n\toverflow-y: auto;\n\ttransition: all 0.3s ease-in-out;\n\tposition: fixed;\n\tz-index: 1;\n\theight: 100%;\n}\nmain .side-nav.active {\n\twidth: 80vw;\n}\n.navtab {\n\tcursor: pointer;\n\tmargin: 10px 10px;\n\tborder: 2px solid rgb(255, 255, 255);\n\tborder-radius: 10px;\n\tbackground-color: rgb(255, 255, 255);\n\tpadding: 10px;\n\twidth: 80%;\n}\n\n.navtab:focus,\n.navtab:hover {\n\toutline: 2px solid var(--nav-tab-focus-color); \n}\n/* Project SideNav  */\n.project-header {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tgap: 10px;\n\twidth: 100%;\n}\n.project-container {\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tgap: 15px;\n}\n.project-header .new-project-btn {\n\tcursor: pointer;\n\tborder: 1px solid black;\n\tborder-radius: 50%;\n\twidth: 30px;\n\theight: 30px;\n\ttransition: all 0.5s ease-in-out;\n}\n.project-header .new-project-btn:hover {\n\ttransform: rotate(360deg);\n}\n.project-link-div {\n\tcursor: pointer;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tfont-size: 1.2rem;\n\tborder: 1px solid rgb(138, 138, 138);\n\tborder-radius: 10px;\n\twidth: 80%;\n\theight: 30px;\n\tpadding: 5px;\n\ttransition: all 0.3s ease-in-out;\n}\n.project-link-div:focus {\n\tborder: 1px solid rgb(25, 25, 25);\n}\n.project-link-div p {\n\tfont-size: 1.2rem;\n\tflex: 1;\n\toverflow: hidden;\n}\n.project-link-div .editIcon {\n\twidth: 23px;\n}\n.project-link-div .deleteIcon {\n\tposition: relative;\n\ttop: 2px;\n\twidth: 23px;\n}\n/* MAIN Container */\nmain .main-content {\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\twidth: 100%;\n\tpadding: 30px;\n\tbackground-color: rgb(255, 255, 255);\n\toverflow-y: auto;\n}\n.taskInfoHeader {\n\twidth: 100%;\n\theight: 30px;\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: center;\n}\n\n/* ********************** */\n/*** FOOTER ***/\nfooter {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 10px;\n\twidth: 100vw;\n\theight: 40px;\n\tbackground-color: var(--footer-background);\n\tz-index: 1;\n}\nfooter img {\n\twidth: 30px;\n\ttransition: all 0.5s ease-in-out;\n}\nfooter img:hover {\n\ttransform: rotate(360deg);\n}\n\n@media screen and (min-width: 695px) {\n\t/* HEADER */\n\theader {\n\t\tgap: 30px;\n\t\tpadding: 15px 20px;\n\t}\n\timg#todo-icon{\n\t\tdisplay: block;\n\t\tmargin-right: -15px;\n\t}\n\t.search-container {\n\t\twidth: 30vw;\n\t}\n\t.container1 {\n\t\tdisplay: flex;\n\t}\n\t.container2 {\n\t\tdisplay: none;\n\t}\n\t.hamburger {\n\t\tdisplay: none;\n\t}\n\t/* MAIN */\n\tmain .side-nav,\n\tmain .side-nav.active {\n\t\twidth: 300px;\n\t\tposition: static;\n\t}\n}\n'],sourceRoot:""}]);const A=i},645:t=>{t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e="",r=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),r&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=t(n),r&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(t,e,r,a,o){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var c=0;c<t.length;c++){var d=[].concat(t[c]);r&&i[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),n.push(d))}},n}},667:t=>{t.exports=function(t,n){return n||(n={}),t?(t=String(t.__esModule?t.default:t),/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),n.hash&&(t+=n.hash),/["'() \t\n]|(%20)/.test(t)||n.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t):t}},537:t=>{t.exports=function(t){var n=t[1],e=t[3];if(!e)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[n].concat([o]).join("\n")}return[n].join("\n")}},379:t=>{var n=[];function e(t){for(var e=-1,r=0;r<n.length;r++)if(n[r].identifier===t){e=r;break}return e}function r(t,r){for(var o={},i=[],A=0;A<t.length;A++){var s=t[A],c=r.base?s[0]+r.base:s[0],d=o[c]||0,l="".concat(c," ").concat(d);o[c]=d+1;var u=e(l),C={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)n[u].references++,n[u].updater(C);else{var p=a(C,r);r.byIndex=A,n.splice(A,0,{identifier:l,updater:p,references:1})}i.push(l)}return i}function a(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap&&n.supports===t.supports&&n.layer===t.layer)return;e.update(t=n)}else e.remove()}}t.exports=function(t,a){var o=r(t=t||[],a=a||{});return function(t){t=t||[];for(var i=0;i<o.length;i++){var A=e(o[i]);n[A].references--}for(var s=r(t,a),c=0;c<o.length;c++){var d=e(o[c]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}o=s}}},569:t=>{var n={};t.exports=function(t,e){var r=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},216:t=>{t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n,t.options),n}},565:(t,n,e)=>{t.exports=function(t){var n=e.nc;n&&t.setAttribute("nonce",n)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var r="";e.supports&&(r+="@supports (".concat(e.supports,") {")),e.media&&(r+="@media ".concat(e.media," {"));var a=void 0!==e.layer;a&&(r+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),r+=e.css,a&&(r+="}"),e.media&&(r+="}"),e.supports&&(r+="}");var o=e.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,t,n.options)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}},589:t=>{t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}},782:(t,n,e)=>{t.exports=e.p+"83ae2c478f96052a1352.svg"}},n={};function e(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return t[r](o,o.exports,e),o.exports}e.m=t,e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var r=n.getElementsByTagName("script");if(r.length)for(var a=r.length-1;a>-1&&!t;)t=r[a--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{var t=e(379),n=e.n(t),r=e(795),a=e.n(r),o=e(569),i=e.n(o),A=e(565),s=e.n(A),c=e(216),d=e.n(c),l=e(589),u=e.n(l),C=e(641),p={};p.styleTagTransform=u(),p.setAttributes=s(),p.insert=i().bind(null,"head"),p.domAPI=a(),p.insertStyleElement=d(),n()(C.Z,p),C.Z&&C.Z.locals&&C.Z.locals;var m=e(724),h={};h.styleTagTransform=u(),h.setAttributes=s(),h.insert=i().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=d(),n()(m.Z,h),m.Z&&m.Z.locals&&m.Z.locals;var g=e(342),f={};f.styleTagTransform=u(),f.setAttributes=s(),f.insert=i().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=d(),n()(g.Z,f),g.Z&&g.Z.locals&&g.Z.locals;var b=e(285),v={};v.styleTagTransform=u(),v.setAttributes=s(),v.insert=i().bind(null,"head"),v.domAPI=a(),v.insertStyleElement=d(),n()(b.Z,v),b.Z&&b.Z.locals&&b.Z.locals;const y=e.p+"eac1a29b0fcadff53187.svg",w=e.p+"7c20ceca07cbd4998585.svg",x=e.p+"213c9439605ca221bc03.svg",B=e.p+"f7c9015f0bf618a577c2.svg";function k(t){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},k(t)}function T(t,n){if(n.length<t)throw new TypeError(t+" argument"+(t>1?"s":"")+" required, but only "+n.length+" present")}function E(t){T(1,arguments);var n=Object.prototype.toString.call(t);return t instanceof Date||"object"===k(t)&&"[object Date]"===n?new Date(t.getTime()):"number"==typeof t||"[object Number]"===n?new Date(t):("string"!=typeof t&&"[object String]"!==n||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function S(t){if(null===t||!0===t||!1===t)return NaN;var n=Number(t);return isNaN(n)?n:n<0?Math.ceil(n):Math.floor(n)}function j(t){T(1,arguments);var n=E(t),e=n.getUTCDay(),r=(e<1?7:0)+e-1;return n.setUTCDate(n.getUTCDate()-r),n.setUTCHours(0,0,0,0),n}function W(t){T(1,arguments);var n=E(t),e=n.getUTCFullYear(),r=new Date(0);r.setUTCFullYear(e+1,0,4),r.setUTCHours(0,0,0,0);var a=j(r),o=new Date(0);o.setUTCFullYear(e,0,4),o.setUTCHours(0,0,0,0);var i=j(o);return n.getTime()>=a.getTime()?e+1:n.getTime()>=i.getTime()?e:e-1}var D={};function M(){return D}function Y(t,n){var e,r,a,o,i,A,s,c;T(1,arguments);var d=M(),l=S(null!==(e=null!==(r=null!==(a=null!==(o=null==n?void 0:n.weekStartsOn)&&void 0!==o?o:null==n||null===(i=n.locale)||void 0===i||null===(A=i.options)||void 0===A?void 0:A.weekStartsOn)&&void 0!==a?a:d.weekStartsOn)&&void 0!==r?r:null===(s=d.locale)||void 0===s||null===(c=s.options)||void 0===c?void 0:c.weekStartsOn)&&void 0!==e?e:0);if(!(l>=0&&l<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var u=E(t),C=u.getUTCDay(),p=(C<l?7:0)+C-l;return u.setUTCDate(u.getUTCDate()-p),u.setUTCHours(0,0,0,0),u}function P(t,n){var e,r,a,o,i,A,s,c;T(1,arguments);var d=E(t),l=d.getUTCFullYear(),u=M(),C=S(null!==(e=null!==(r=null!==(a=null!==(o=null==n?void 0:n.firstWeekContainsDate)&&void 0!==o?o:null==n||null===(i=n.locale)||void 0===i||null===(A=i.options)||void 0===A?void 0:A.firstWeekContainsDate)&&void 0!==a?a:u.firstWeekContainsDate)&&void 0!==r?r:null===(s=u.locale)||void 0===s||null===(c=s.options)||void 0===c?void 0:c.firstWeekContainsDate)&&void 0!==e?e:1);if(!(C>=1&&C<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var p=new Date(0);p.setUTCFullYear(l+1,0,C),p.setUTCHours(0,0,0,0);var m=Y(p,n),h=new Date(0);h.setUTCFullYear(l,0,C),h.setUTCHours(0,0,0,0);var g=Y(h,n);return d.getTime()>=m.getTime()?l+1:d.getTime()>=g.getTime()?l:l-1}function U(t,n){for(var e=t<0?"-":"",r=Math.abs(t).toString();r.length<n;)r="0"+r;return e+r}var L={y:function(t,n){var e=t.getUTCFullYear(),r=e>0?e:1-e;return U("yy"===n?r%100:r,n.length)},M:function(t,n){var e=t.getUTCMonth();return"M"===n?String(e+1):U(e+1,2)},d:function(t,n){return U(t.getUTCDate(),n.length)},a:function(t,n){var e=t.getUTCHours()/12>=1?"pm":"am";switch(n){case"a":case"aa":return e.toUpperCase();case"aaa":return e;case"aaaaa":return e[0];default:return"am"===e?"a.m.":"p.m."}},h:function(t,n){return U(t.getUTCHours()%12||12,n.length)},H:function(t,n){return U(t.getUTCHours(),n.length)},m:function(t,n){return U(t.getUTCMinutes(),n.length)},s:function(t,n){return U(t.getUTCSeconds(),n.length)},S:function(t,n){var e=n.length,r=t.getUTCMilliseconds();return U(Math.floor(r*Math.pow(10,e-3)),n.length)}};const q=L;var N={G:function(t,n,e){var r=t.getUTCFullYear()>0?1:0;switch(n){case"G":case"GG":case"GGG":return e.era(r,{width:"abbreviated"});case"GGGGG":return e.era(r,{width:"narrow"});default:return e.era(r,{width:"wide"})}},y:function(t,n,e){if("yo"===n){var r=t.getUTCFullYear(),a=r>0?r:1-r;return e.ordinalNumber(a,{unit:"year"})}return q.y(t,n)},Y:function(t,n,e,r){var a=P(t,r),o=a>0?a:1-a;return"YY"===n?U(o%100,2):"Yo"===n?e.ordinalNumber(o,{unit:"year"}):U(o,n.length)},R:function(t,n){return U(W(t),n.length)},u:function(t,n){return U(t.getUTCFullYear(),n.length)},Q:function(t,n,e){var r=Math.ceil((t.getUTCMonth()+1)/3);switch(n){case"Q":return String(r);case"QQ":return U(r,2);case"Qo":return e.ordinalNumber(r,{unit:"quarter"});case"QQQ":return e.quarter(r,{width:"abbreviated",context:"formatting"});case"QQQQQ":return e.quarter(r,{width:"narrow",context:"formatting"});default:return e.quarter(r,{width:"wide",context:"formatting"})}},q:function(t,n,e){var r=Math.ceil((t.getUTCMonth()+1)/3);switch(n){case"q":return String(r);case"qq":return U(r,2);case"qo":return e.ordinalNumber(r,{unit:"quarter"});case"qqq":return e.quarter(r,{width:"abbreviated",context:"standalone"});case"qqqqq":return e.quarter(r,{width:"narrow",context:"standalone"});default:return e.quarter(r,{width:"wide",context:"standalone"})}},M:function(t,n,e){var r=t.getUTCMonth();switch(n){case"M":case"MM":return q.M(t,n);case"Mo":return e.ordinalNumber(r+1,{unit:"month"});case"MMM":return e.month(r,{width:"abbreviated",context:"formatting"});case"MMMMM":return e.month(r,{width:"narrow",context:"formatting"});default:return e.month(r,{width:"wide",context:"formatting"})}},L:function(t,n,e){var r=t.getUTCMonth();switch(n){case"L":return String(r+1);case"LL":return U(r+1,2);case"Lo":return e.ordinalNumber(r+1,{unit:"month"});case"LLL":return e.month(r,{width:"abbreviated",context:"standalone"});case"LLLLL":return e.month(r,{width:"narrow",context:"standalone"});default:return e.month(r,{width:"wide",context:"standalone"})}},w:function(t,n,e,r){var a=function(t,n){T(1,arguments);var e=E(t),r=Y(e,n).getTime()-function(t,n){var e,r,a,o,i,A,s,c;T(1,arguments);var d=M(),l=S(null!==(e=null!==(r=null!==(a=null!==(o=null==n?void 0:n.firstWeekContainsDate)&&void 0!==o?o:null==n||null===(i=n.locale)||void 0===i||null===(A=i.options)||void 0===A?void 0:A.firstWeekContainsDate)&&void 0!==a?a:d.firstWeekContainsDate)&&void 0!==r?r:null===(s=d.locale)||void 0===s||null===(c=s.options)||void 0===c?void 0:c.firstWeekContainsDate)&&void 0!==e?e:1),u=P(t,n),C=new Date(0);return C.setUTCFullYear(u,0,l),C.setUTCHours(0,0,0,0),Y(C,n)}(e,n).getTime();return Math.round(r/6048e5)+1}(t,r);return"wo"===n?e.ordinalNumber(a,{unit:"week"}):U(a,n.length)},I:function(t,n,e){var r=function(t){T(1,arguments);var n=E(t),e=j(n).getTime()-function(t){T(1,arguments);var n=W(t),e=new Date(0);return e.setUTCFullYear(n,0,4),e.setUTCHours(0,0,0,0),j(e)}(n).getTime();return Math.round(e/6048e5)+1}(t);return"Io"===n?e.ordinalNumber(r,{unit:"week"}):U(r,n.length)},d:function(t,n,e){return"do"===n?e.ordinalNumber(t.getUTCDate(),{unit:"date"}):q.d(t,n)},D:function(t,n,e){var r=function(t){T(1,arguments);var n=E(t),e=n.getTime();n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0);var r=e-n.getTime();return Math.floor(r/864e5)+1}(t);return"Do"===n?e.ordinalNumber(r,{unit:"dayOfYear"}):U(r,n.length)},E:function(t,n,e){var r=t.getUTCDay();switch(n){case"E":case"EE":case"EEE":return e.day(r,{width:"abbreviated",context:"formatting"});case"EEEEE":return e.day(r,{width:"narrow",context:"formatting"});case"EEEEEE":return e.day(r,{width:"short",context:"formatting"});default:return e.day(r,{width:"wide",context:"formatting"})}},e:function(t,n,e,r){var a=t.getUTCDay(),o=(a-r.weekStartsOn+8)%7||7;switch(n){case"e":return String(o);case"ee":return U(o,2);case"eo":return e.ordinalNumber(o,{unit:"day"});case"eee":return e.day(a,{width:"abbreviated",context:"formatting"});case"eeeee":return e.day(a,{width:"narrow",context:"formatting"});case"eeeeee":return e.day(a,{width:"short",context:"formatting"});default:return e.day(a,{width:"wide",context:"formatting"})}},c:function(t,n,e,r){var a=t.getUTCDay(),o=(a-r.weekStartsOn+8)%7||7;switch(n){case"c":return String(o);case"cc":return U(o,n.length);case"co":return e.ordinalNumber(o,{unit:"day"});case"ccc":return e.day(a,{width:"abbreviated",context:"standalone"});case"ccccc":return e.day(a,{width:"narrow",context:"standalone"});case"cccccc":return e.day(a,{width:"short",context:"standalone"});default:return e.day(a,{width:"wide",context:"standalone"})}},i:function(t,n,e){var r=t.getUTCDay(),a=0===r?7:r;switch(n){case"i":return String(a);case"ii":return U(a,n.length);case"io":return e.ordinalNumber(a,{unit:"day"});case"iii":return e.day(r,{width:"abbreviated",context:"formatting"});case"iiiii":return e.day(r,{width:"narrow",context:"formatting"});case"iiiiii":return e.day(r,{width:"short",context:"formatting"});default:return e.day(r,{width:"wide",context:"formatting"})}},a:function(t,n,e){var r=t.getUTCHours()/12>=1?"pm":"am";switch(n){case"a":case"aa":return e.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"aaa":return e.dayPeriod(r,{width:"abbreviated",context:"formatting"}).toLowerCase();case"aaaaa":return e.dayPeriod(r,{width:"narrow",context:"formatting"});default:return e.dayPeriod(r,{width:"wide",context:"formatting"})}},b:function(t,n,e){var r,a=t.getUTCHours();switch(r=12===a?"noon":0===a?"midnight":a/12>=1?"pm":"am",n){case"b":case"bb":return e.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"bbb":return e.dayPeriod(r,{width:"abbreviated",context:"formatting"}).toLowerCase();case"bbbbb":return e.dayPeriod(r,{width:"narrow",context:"formatting"});default:return e.dayPeriod(r,{width:"wide",context:"formatting"})}},B:function(t,n,e){var r,a=t.getUTCHours();switch(r=a>=17?"evening":a>=12?"afternoon":a>=4?"morning":"night",n){case"B":case"BB":case"BBB":return e.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"BBBBB":return e.dayPeriod(r,{width:"narrow",context:"formatting"});default:return e.dayPeriod(r,{width:"wide",context:"formatting"})}},h:function(t,n,e){if("ho"===n){var r=t.getUTCHours()%12;return 0===r&&(r=12),e.ordinalNumber(r,{unit:"hour"})}return q.h(t,n)},H:function(t,n,e){return"Ho"===n?e.ordinalNumber(t.getUTCHours(),{unit:"hour"}):q.H(t,n)},K:function(t,n,e){var r=t.getUTCHours()%12;return"Ko"===n?e.ordinalNumber(r,{unit:"hour"}):U(r,n.length)},k:function(t,n,e){var r=t.getUTCHours();return 0===r&&(r=24),"ko"===n?e.ordinalNumber(r,{unit:"hour"}):U(r,n.length)},m:function(t,n,e){return"mo"===n?e.ordinalNumber(t.getUTCMinutes(),{unit:"minute"}):q.m(t,n)},s:function(t,n,e){return"so"===n?e.ordinalNumber(t.getUTCSeconds(),{unit:"second"}):q.s(t,n)},S:function(t,n){return q.S(t,n)},X:function(t,n,e,r){var a=(r._originalDate||t).getTimezoneOffset();if(0===a)return"Z";switch(n){case"X":return O(a);case"XXXX":case"XX":return H(a);default:return H(a,":")}},x:function(t,n,e,r){var a=(r._originalDate||t).getTimezoneOffset();switch(n){case"x":return O(a);case"xxxx":case"xx":return H(a);default:return H(a,":")}},O:function(t,n,e,r){var a=(r._originalDate||t).getTimezoneOffset();switch(n){case"O":case"OO":case"OOO":return"GMT"+Z(a,":");default:return"GMT"+H(a,":")}},z:function(t,n,e,r){var a=(r._originalDate||t).getTimezoneOffset();switch(n){case"z":case"zz":case"zzz":return"GMT"+Z(a,":");default:return"GMT"+H(a,":")}},t:function(t,n,e,r){var a=r._originalDate||t;return U(Math.floor(a.getTime()/1e3),n.length)},T:function(t,n,e,r){return U((r._originalDate||t).getTime(),n.length)}};function Z(t,n){var e=t>0?"-":"+",r=Math.abs(t),a=Math.floor(r/60),o=r%60;if(0===o)return e+String(a);var i=n||"";return e+String(a)+i+U(o,2)}function O(t,n){return t%60==0?(t>0?"-":"+")+U(Math.abs(t)/60,2):H(t,n)}function H(t,n){var e=n||"",r=t>0?"-":"+",a=Math.abs(t);return r+U(Math.floor(a/60),2)+e+U(a%60,2)}const I=N;var z=function(t,n){switch(t){case"P":return n.date({width:"short"});case"PP":return n.date({width:"medium"});case"PPP":return n.date({width:"long"});default:return n.date({width:"full"})}},G=function(t,n){switch(t){case"p":return n.time({width:"short"});case"pp":return n.time({width:"medium"});case"ppp":return n.time({width:"long"});default:return n.time({width:"full"})}};const R={p:G,P:function(t,n){var e,r=t.match(/(P+)(p+)?/)||[],a=r[1],o=r[2];if(!o)return z(t,n);switch(a){case"P":e=n.dateTime({width:"short"});break;case"PP":e=n.dateTime({width:"medium"});break;case"PPP":e=n.dateTime({width:"long"});break;default:e=n.dateTime({width:"full"})}return e.replace("{{date}}",z(a,n)).replace("{{time}}",G(o,n))}};var X=["D","DD"],F=["YY","YYYY"];function Q(t,n,e){if("YYYY"===t)throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(n,"`) for formatting years to the input `").concat(e,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("YY"===t)throw new RangeError("Use `yy` instead of `YY` (in `".concat(n,"`) for formatting years to the input `").concat(e,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("D"===t)throw new RangeError("Use `d` instead of `D` (in `".concat(n,"`) for formatting days of the month to the input `").concat(e,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("DD"===t)throw new RangeError("Use `dd` instead of `DD` (in `".concat(n,"`) for formatting days of the month to the input `").concat(e,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"))}var V={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function J(t){return function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=n.width?String(n.width):t.defaultWidth;return t.formats[e]||t.formats[t.defaultWidth]}}const _={date:J({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:J({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:J({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})};var $={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function K(t){return function(n,e){var r;if("formatting"===(null!=e&&e.context?String(e.context):"standalone")&&t.formattingValues){var a=t.defaultFormattingWidth||t.defaultWidth,o=null!=e&&e.width?String(e.width):a;r=t.formattingValues[o]||t.formattingValues[a]}else{var i=t.defaultWidth,A=null!=e&&e.width?String(e.width):t.defaultWidth;r=t.values[A]||t.values[i]}return r[t.argumentCallback?t.argumentCallback(n):n]}}const tt={ordinalNumber:function(t,n){var e=Number(t),r=e%100;if(r>20||r<10)switch(r%10){case 1:return e+"st";case 2:return e+"nd";case 3:return e+"rd"}return e+"th"},era:K({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:K({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(t){return t-1}}),month:K({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:K({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:K({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})};function nt(t){return function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=e.width,a=r&&t.matchPatterns[r]||t.matchPatterns[t.defaultMatchWidth],o=n.match(a);if(!o)return null;var i,A=o[0],s=r&&t.parsePatterns[r]||t.parsePatterns[t.defaultParseWidth],c=Array.isArray(s)?function(t,n){for(var e=0;e<t.length;e++)if(t[e].test(A))return e}(s):function(t,n){for(var e in t)if(t.hasOwnProperty(e)&&t[e].test(A))return e}(s);return i=t.valueCallback?t.valueCallback(c):c,{value:i=e.valueCallback?e.valueCallback(i):i,rest:n.slice(A.length)}}}var et,rt={ordinalNumber:(et={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(t){return parseInt(t,10)}},function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},e=t.match(et.matchPattern);if(!e)return null;var r=e[0],a=t.match(et.parsePattern);if(!a)return null;var o=et.valueCallback?et.valueCallback(a[0]):a[0];return{value:o=n.valueCallback?n.valueCallback(o):o,rest:t.slice(r.length)}}),era:nt({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:nt({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(t){return t+1}}),month:nt({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:nt({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:nt({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})};const at={code:"en-US",formatDistance:function(t,n,e){var r,a=V[t];return r="string"==typeof a?a:1===n?a.one:a.other.replace("{{count}}",n.toString()),null!=e&&e.addSuffix?e.comparison&&e.comparison>0?"in "+r:r+" ago":r},formatLong:_,formatRelative:function(t,n,e,r){return $[t]},localize:tt,match:rt,options:{weekStartsOn:0,firstWeekContainsDate:1}};var ot=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,it=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,At=/^'([^]*?)'?$/,st=/''/g,ct=/[a-zA-Z]/;function dt(t,n,e){var r,a,o,i,A,s,c,d,l,u,C,p,m,h,g,f,b,v;T(2,arguments);var y=String(n),w=M(),x=null!==(r=null!==(a=null==e?void 0:e.locale)&&void 0!==a?a:w.locale)&&void 0!==r?r:at,B=S(null!==(o=null!==(i=null!==(A=null!==(s=null==e?void 0:e.firstWeekContainsDate)&&void 0!==s?s:null==e||null===(c=e.locale)||void 0===c||null===(d=c.options)||void 0===d?void 0:d.firstWeekContainsDate)&&void 0!==A?A:w.firstWeekContainsDate)&&void 0!==i?i:null===(l=w.locale)||void 0===l||null===(u=l.options)||void 0===u?void 0:u.firstWeekContainsDate)&&void 0!==o?o:1);if(!(B>=1&&B<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var j=S(null!==(C=null!==(p=null!==(m=null!==(h=null==e?void 0:e.weekStartsOn)&&void 0!==h?h:null==e||null===(g=e.locale)||void 0===g||null===(f=g.options)||void 0===f?void 0:f.weekStartsOn)&&void 0!==m?m:w.weekStartsOn)&&void 0!==p?p:null===(b=w.locale)||void 0===b||null===(v=b.options)||void 0===v?void 0:v.weekStartsOn)&&void 0!==C?C:0);if(!(j>=0&&j<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");if(!x.localize)throw new RangeError("locale must contain localize property");if(!x.formatLong)throw new RangeError("locale must contain formatLong property");var W=E(t);if(!function(t){if(T(1,arguments),!function(t){return T(1,arguments),t instanceof Date||"object"===k(t)&&"[object Date]"===Object.prototype.toString.call(t)}(t)&&"number"!=typeof t)return!1;var n=E(t);return!isNaN(Number(n))}(W))throw new RangeError("Invalid time value");var D=function(t){var n=new Date(Date.UTC(t.getFullYear(),t.getMonth(),t.getDate(),t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds()));return n.setUTCFullYear(t.getFullYear()),t.getTime()-n.getTime()}(W),Y=function(t,n){return T(2,arguments),function(t,n){T(2,arguments);var e=E(t).getTime(),r=S(n);return new Date(e+r)}(t,-S(n))}(W,D),P={firstWeekContainsDate:B,weekStartsOn:j,locale:x,_originalDate:W};return y.match(it).map((function(t){var n=t[0];return"p"===n||"P"===n?(0,R[n])(t,x.formatLong):t})).join("").match(ot).map((function(r){if("''"===r)return"'";var a,o,i=r[0];if("'"===i)return(o=(a=r).match(At))?o[1].replace(st,"'"):a;var A,s=I[i];if(s)return null!=e&&e.useAdditionalWeekYearTokens||(A=r,-1===F.indexOf(A))||Q(r,n,String(t)),null!=e&&e.useAdditionalDayOfYearTokens||!function(t){return-1!==X.indexOf(t)}(r)||Q(r,n,String(t)),s(Y,r,x.localize,P);if(i.match(ct))throw new RangeError("Format string contains an unescaped latin alphabet character `"+i+"`");return r})).join("")}function lt(t){return dt(new Date(t),"MMMM d, yyyy")}const ut=document.querySelector(".task-list"),Ct=document.querySelector(".add-task-btn");let pt=null;function mt(t,n){const e=document.querySelector(".main-title"),r=document.querySelector(".side-nav"),a=document.querySelector(".hamburger");if(r.classList.remove("active"),a.classList.remove("active"),"mainTabInfo"==n)ft(),pt=t.target.id,"All"===pt&&function(){Bt();for(let t=0;t<Vt.length;t++){const n=Vt[t].title;console.log(n),ht(n)}}();else{const n=t.target.closest("[data-project-id]");n&&(pt=n.getAttribute("data-project-id"),Bt(),ht(pt),gt())}e.textContent=pt,vt()}function ht(t){const n=Vt.find((n=>n.title==t));n&&n.getTasks().forEach((t=>{const n=yt("div","task-info-container"),e=yt("div","task-top-container"),r=yt("div","task-inner-left-container"),a=yt("div","task-inner-right-container"),o=yt("div","task-descr-container"),i=yt("p","task-title");i.textContent=t.title,r.appendChild(i);const A=yt("p","task-description");t.description&&(A.textContent=t.description,o.appendChild(A));const s=yt("img","priority-flag");wt(s,t.priority),a.appendChild(s);const c=yt("p","task-date");if(t.date){const n=lt(t.date);c.textContent=n,a.appendChild(c)}e.appendChild(r),e.appendChild(a),n.appendChild(e),n.appendChild(o),ut.appendChild(n)}))}function gt(){Ct.classList.remove("hidden"),Ct.addEventListener("click",bt)}function ft(){Ct.classList.add("hidden"),console.log("wth"),Ct.removeEventListener("click",bt)}function bt(){!function(t){document.querySelector(".task-modal-container").classList.remove("hidden"),zt("addTask",t)}(pt),ft()}function vt(){const t=document.querySelector(".task-modal-container");document.getElementById("task-name").value="",document.getElementById("task-description").value="",t.classList.add("hidden")}function yt(t,n){const e=document.createElement(t);return e.classList.add(n),e}function wt(t,n){switch(n){case"high-priority":xt(t),t.classList.add("flag-high"),t.src=x;break;case"medium-priority":xt(t),t.classList.add("flag-medium"),t.src=x;break;case"low-priority":xt(t),t.classList.add("flag-low"),t.src=x;break;default:xt(t),t.src=B,t.classList.add("flag-none")}}function xt(t){t.classList.remove("flag-high"),t.classList.remove("flag-medium"),t.classList.remove("flag-low")}function Bt(){ut.textContent=""}const kt=document.querySelector(".project-modal-background"),Tt=document.querySelector(".project-modal-container form"),Et=document.querySelector(".task-modal-container form"),St=document.querySelector(".modal-project-btn"),jt=document.querySelector(".modal-cancel-btn"),Wt=document.getElementById("errorText"),Dt=document.querySelector(".priority-container"),Mt=document.querySelector(".priority-container p"),Yt=document.querySelector(".dropdown-container"),Pt=document.querySelectorAll(".dropdown li"),Ut=document.querySelector(".priority-container img"),Lt=document.querySelector(".due-date-container"),qt=document.getElementById("date-input"),Nt=document.querySelector(".due-date-container p");let Zt=null,Ot=null,Ht=null,It=!1;function zt(t,n=null){switch(function(t){Wt.style.display="none",Zt=t,Ot=null,Ht=null,Nt.textContent="Due Date",Mt.textContent="Priority",Ut.src=B,xt(Ut)}(n),t){case"addProject":It=!1,Gt||(St.addEventListener("click",Rt),jt.addEventListener("click",Xt),Gt=!0);break;case"editProject":It=!0,function(){St.removeEventListener("click",Rt),St.addEventListener("click",Rt);const t=Vt.find((t=>t.title===Zt));t&&(document.getElementById("project-name").value=t.title)}();break;case"addTask":!function(){const t=document.querySelector(".submit-close-container.mobile .submit-task-btn"),n=document.querySelectorAll(".cancel-task-btn");function e(){let t=!1;return{submitHandler:function(t){t.preventDefault(),Et.checkValidity()&&Ft()},submitMobileHandler:function(){Et.checkValidity()?(Wt.style.display="none",Ft()):Wt.style.display="block"},cancelHandler:function(){vt(),gt()},priorityHandler:function(t){Ot=t.target.closest("[data-priority]").getAttribute("data-priority"),wt(Ut,Ot),Mt.textContent=function(t){return"high-priority"==t?"High":"medium-priority"==t?"Medium":"low-priority"==t?"Low":void 0}(Ot),Yt.classList.remove("active"),t.stopPropagation()},dateHandler:function(){qt.showPicker(),t||qt.addEventListener("input",(()=>{Ht=qt.value;const n=lt(Ht);Nt.textContent=n,t=!0}))}}}Qt||(Dt.addEventListener("click",(()=>{Yt.classList.toggle("active")})),Qt=!0);const r=e();Et.removeEventListener("submit",r.submitHandler),t.removeEventListener("click",r.submitMobileHandler),n.forEach((t=>t.removeEventListener("click",r.cancelHandler))),Pt.forEach((t=>{t.removeEventListener("click",r.priorityHandler)})),Lt.removeEventListener("click",r.dateHandler);const a=e();Et.addEventListener("submit",a.submitHandler),t.addEventListener("click",a.submitMobileHandler),n.forEach((t=>t.addEventListener("click",a.cancelHandler))),Pt.forEach((t=>{t.addEventListener("click",a.priorityHandler)})),Lt.addEventListener("click",a.dateHandler)}()}}let Gt=!1;function Rt(t){if(Tt.checkValidity()){t.preventDefault();const n=document.getElementById("project-name").value;if(It){const t=Vt.findIndex((t=>t.title===Zt));-1!==t&&(Vt[t].title=n,function(t,n){const e=document.querySelector(`[data-project-id="${t}"]`);e.querySelector(".project-title").textContent=n,e.setAttribute("data-project-id",n)}(Zt,n))}else Vt.push(function(t){let n=[];return{title:t,setTask(t,e=null,r=null,a=null){n.push({title:t,description:e,priority:r,date:a})},getTasks:()=>n}}(n)),function(t){const n=Kt("div","project-link-div");n.setAttribute("data-project-id",t),n.setAttribute("tabindex",0);const e=Kt("p","project-title");e.textContent=t,n.appendChild(e);const r=Kt("div","icon-divider");(function(t){const n=Kt("img","editIcon");n.src=w,n.addEventListener("click",(t=>{const n=t.target.parentNode.parentNode.getAttribute("data-project-id");$t("editProject"),zt("editProject",n)})),t.appendChild(n)})(r),function(t){const n=Kt("img","deleteIcon");n.src=y,n.addEventListener("click",(t=>{!function(t){const n=document.querySelector(`[data-project-id="${t}"]`);n&&(Vt=Vt.filter((n=>n.title!=t)),n.remove())}(t.target.parentNode.parentNode.getAttribute("data-project-id"))})),t.appendChild(n)}(r),n.appendChild(r),Jt.appendChild(n),n.addEventListener("click",(t=>mt(t,"projectTabInfo")))}(n);Xt()}}function Xt(){document.getElementById("project-name").value="",kt.classList.add("hidden")}function Ft(){const t=Vt.find((t=>t.title==Zt)),n=document.getElementById("task-name").value,e=document.getElementById("task-description").value,r=Ht,a=Ot;t.setTask(n,e,a,r),Bt(),ht(Zt),vt(),gt()}let Qt=!1,Vt=[];const Jt=document.querySelector(".project-container"),_t=document.querySelector(".project-modal-background");function $t(t){"addProject"===t?(document.querySelector(".project-modal-header").textContent="New Project",document.querySelector(".modal-project-btn").textContent="Add"):(document.querySelector(".project-modal-header").textContent="Edit Project",document.querySelector(".modal-project-btn").textContent="Edit"),_t.classList.remove("hidden")}function Kt(t,n){const e=document.createElement(t);return e.classList.add(n),e}const tn=document.querySelector(".hamburger"),nn=document.querySelector(".side-nav"),en=document.querySelector(".new-project-btn"),rn=document.querySelectorAll(".navtab");!function(){const t=document.querySelector(".main-title"),n=document.getElementById("All");t.textContent="All",n.focus()}(),rn.forEach((t=>t.addEventListener("click",(t=>mt(t,"mainTabInfo"))))),tn.addEventListener("click",(()=>{tn.classList.toggle("active"),nn.classList.toggle("active")})),en.addEventListener("click",(()=>{$t("addProject"),zt("addProject")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,