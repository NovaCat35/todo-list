(()=>{"use strict";var t={285:(t,n,e)=>{e.d(n,{Z:()=>C});var r=e(537),o=e.n(r),a=e(645),i=e.n(a),A=e(667),c=e.n(A),s=new URL(e(782),e.b),d=i()(o()),l=c()(s);d.push([t.id,`/* DUE DATE PICKER CONTAINER (The main container styling in modal.css */\n\n.date-picker-container {\n   display: flex;\n   justify-content: center;\n   align-items: center;\n}\n\n/* Hide the default input field & set width/height for overall container */\n.date-picker-container input[type="date"] {\n\tappearance: none;\n\t-webkit-appearance: none;\n\t-moz-appearance: none;\n\twidth: 20px; \n\theight: 20px;\n\tpadding: 0;\n\tborder: none;\n\tbackground: transparent;\n\toutline: none;\n}\n\n/* Style the calendar icon (Set background to cover entire input) */\ninput[type="date"]::-webkit-calendar-picker-indicator {\n\tbackground: url(${l}) center/cover no-repeat; \n\twidth: 100%;\n\theight: 100%;\n\tcursor: pointer;\n}\n`,"",{version:3,sources:["webpack://./src/styles/date.css"],names:[],mappings:"AAAA,uEAAuE;;AAEvE;GACG,aAAa;GACb,uBAAuB;GACvB,mBAAmB;AACtB;;AAEA,0EAA0E;AAC1E;CACC,gBAAgB;CAChB,wBAAwB;CACxB,qBAAqB;CACrB,WAAW;CACX,YAAY;CACZ,UAAU;CACV,YAAY;CACZ,uBAAuB;CACvB,aAAa;AACd;;AAEA,mEAAmE;AACnE;CACC,0EAAgE;CAChE,WAAW;CACX,YAAY;CACZ,eAAe;AAChB",sourcesContent:['/* DUE DATE PICKER CONTAINER (The main container styling in modal.css */\n\n.date-picker-container {\n   display: flex;\n   justify-content: center;\n   align-items: center;\n}\n\n/* Hide the default input field & set width/height for overall container */\n.date-picker-container input[type="date"] {\n\tappearance: none;\n\t-webkit-appearance: none;\n\t-moz-appearance: none;\n\twidth: 20px; \n\theight: 20px;\n\tpadding: 0;\n\tborder: none;\n\tbackground: transparent;\n\toutline: none;\n}\n\n/* Style the calendar icon (Set background to cover entire input) */\ninput[type="date"]::-webkit-calendar-picker-indicator {\n\tbackground: url("../assets/calendar.svg") center/cover no-repeat; \n\twidth: 100%;\n\theight: 100%;\n\tcursor: pointer;\n}\n'],sourceRoot:""}]);const C=d},724:(t,n,e)=>{e.d(n,{Z:()=>A});var r=e(537),o=e.n(r),a=e(645),i=e.n(a)()(o());i.push([t.id,":root {\n\t--add-task-btn-color: invert(43%) sepia(57%) saturate(7479%) hue-rotate(354deg) brightness(95%) contrast(87%);\n\t--add-task-btn-desktop-color: rgb(54, 141, 218);\n\t--add-task-btn-desktop-color-hover: rgb(0, 98, 164);\n\t--cancel-task-btn-desktop-color: rgb(227, 67, 67);\n\t--cancel-task-btn-desktop-color-hover: rgb(177, 24, 11);\n\t--cancel-task-btn-color: invert(66%) sepia(3%) saturate(409%) hue-rotate(179deg) brightness(94%) contrast(91%);\n\t--priority-high-color: invert(23%) sepia(89%) saturate(6106%) hue-rotate(344deg) brightness(93%) contrast(114%);\n\t--priority-medium-color: invert(69%) sepia(42%) saturate(3413%) hue-rotate(5deg) brightness(112%) contrast(98%);\n\t--priority-low-color: invert(65%) sepia(87%) saturate(1264%) hue-rotate(136deg) brightness(103%) contrast(98%);\n\t--priority-none-color: invert(0%) sepia(1%) saturate(7499%) hue-rotate(338deg) brightness(93%) contrast(95%);\n}\n\n/* PROJECT MODAL */\n.hidden {\n\tdisplay: none;\n}\n.project-modal-background {\n\tposition: absolute;\n\ttop: 0;\n\theight: 100%;\n\twidth: 100%;\n\tbackground-color: rgb(0, 0, 0, 0.5);\n\tz-index: 1;\n}\n.project-modal-container {\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tposition: absolute;\n\tbackground-color: rgb(255, 255, 255);\n\twidth: clamp(300px, 80vw, 600px);\n\tborder-radius: 10px;\n}\n.modal-btn-container {\n\twidth: 50vw;\n}\n.project-modal-container header {\n\tborder-radius: 10px 10px 0 0;\n\theight: 50px;\n\twidth: 100%;\n}\n.project-modal-container form {\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 30px;\n\twidth: 100%;\n}\n.project-modal-container form input {\n\tmargin-top: 5px;\n\toutline: none;\n\tappearance: none;\n\tborder-radius: 5px;\n\tborder: 1px solid black;\n\tpadding: 5px;\n}\n.modal-btn-container {\n\tmargin-top: 30px;\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tgap: 10px;\n}\n\n/* Task Modal */\n.task-modal-container {\n\twidth: 100%;\n}\n.task-modal-container form {\n\tborder: 1.5px solid rgb(174, 174, 174);\n\tborder-radius: 10px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tgap: 10px;\n\twidth: 100%;\n\tpadding: 20px 10px 5px;\n}\n.task-modal-container form input {\n\toutline: none;\n\tfont-size: 1.03rem;\n\twidth: 100%;\n\tappearance: none;\n\tborder: none;\n}\n.task-modal-container .error-message {\n\tmargin-left: 5px;\n\tmargin-top: -10px;\n\twidth: 100%;\n\tcolor: red;\n\tdisplay: none;\n}\n.task-modal-container .bottom-tabs {\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n}\n/* Due date and priority buttons */\n.option-container {\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 10px;\n}\n.option-container img {\n\twidth: 25px;\n}\n.submit-close-container img {\n\twidth: 35px;\n}\n.due-date-container,\n.priority-container {\n\tposition: relative;\n\tpadding: 0px 10px;\n\tborder: 1px solid black;\n\tborder-radius: 10px;\n\tdisplay: flex;\n\talign-self: center;\n\tjustify-content: center;\n\tgap: 5px;\n}\n.option-container p {\n\tcursor: pointer;\n\tline-height: 2;\n\tmargin: 0;\n}\n/* Priority Container */\n.dropdown-container {\n\toverflow: hidden;\n\tposition: absolute;\n\ttop: 32px;\n\tbackground-color: rgb(249, 249, 249);\n\tborder-radius: 12px;\n\twidth: 200px;\n\tdisplay: none;\n\tbox-shadow: 0px 0px 10px 0px rgb(207 207 207);\n\tz-index: 1;\n}\n.dropdown-container ul {\n\tlist-style: none;\n\tmargin: 0;\n\tpadding: 0;\n\tdisplay: flex;\n\tflex-direction: column;\n}\n.dropdown-container li {\n\tcursor: pointer;\n\tpadding: 10px;\n\tdisplay: flex;\n\tgap: 10px;\n\talign-items: center;\n}\n.dropdown-container li img {\n\twidth: 27px;\n}\n.dropdown-container li p {\n\tline-height: 1;\n}\n.dropdown-container li:first-child img {\n\tfilter: var(--priority-high-color);\n}\n.dropdown-container li:nth-child(2) img {\n\tfilter: var(--priority-medium-color);\n}\n.dropdown-container li:last-child img {\n\tfilter: var(--priority-low-color);\n}\n.priority-container .dropdown-container li:hover {\n\tbackground-color: #e8e8e8;\n\tcolor: black;\n}\n.priority-container:focus {\n\tcolor: rgb(58, 58, 58);\n\tborder: 1px solid rgb(165, 165, 165);\n\tbackground-color: rgb(230, 230, 230);\n}\n.priority-container .dropdown-container.active {\n\tdisplay: block;\n}\n\n.submit-close-container {\n\tcursor: pointer;\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 10px;\n\tjustify-content: flex-end;\n\tmargin-top: 15px;\n\tborder-top: 1.5px solid #a7a7a7;\n\tpadding-top: 5px;\n}\n/* add task and close task btn [DESKTOP]*/\n.submit-close-container.desktop {\n\tdisplay: none;\n\tgap: 15px;\n}\n.submit-close-container.desktop button {\n\tappearance: none;\n\tmargin: 0;\n\tfont-size: 1.1rem;\n\tborder: none;\n\tborder-radius: 7px;\n\tpadding: 7px 13px;\n\ttransition: all 0.3s ease-in-out;\n}\n.submit-close-container.desktop .submit-task-btn {\n\tcolor: white;\n\tbackground-color: var(--add-task-btn-desktop-color);\n}\n.submit-close-container.desktop .cancel-task-btn {\n\tcolor: white;\n\tbackground-color: var(--cancel-task-btn-desktop-color);\n}\n.submit-close-container.desktop .submit-task-btn:hover {\n\tbackground-color: var(--add-task-btn-desktop-color-hover);\n}\n.submit-close-container.desktop .cancel-task-btn:hover {\n\tbackground-color: var(--cancel-task-btn-desktop-color-hover);\n}\n.submit-close-container.mobile .submit-task-btn {\n\tfilter: var(--add-task-btn-color);\n}\n.submit-close-container.mobile .cancel-task-btn {\n\tfilter: var(--cancel-task-btn-color);\n}\n\n@media screen and (min-width: 396px) {\n\t.task-modal-container .bottom-tabs {\n\t\tflex-direction: row;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t}\n\t/* Change the bottom submit tabs to align with the option tabs */\n\t.submit-close-container {\n\t\tmargin-top: 0;\n\t\tjustify-content: flex-start;\n\t\tmargin-top: 0;\n\t\tborder-top: none;\n\t\tpadding-top: 0;\n\t}\n\t.task-modal-container form {\n\t\tpadding: 20px 10px 10px;\n\t}\n}\n\n@media screen and (min-width: 832px) {\n\t.submit-close-container.desktop {\n\t\tdisplay: flex;\n\t}\n\t.submit-close-container.mobile {\n\t\tdisplay: none;\n\t}\n\t.task-modal-container form {\n\t\tpadding: 15px 15px;\n\t}\n}\n","",{version:3,sources:["webpack://./src/styles/modal.css"],names:[],mappings:"AAAA;CACC,6GAA6G;CAC7G,+CAA+C;CAC/C,mDAAmD;CACnD,iDAAiD;CACjD,uDAAuD;CACvD,8GAA8G;CAC9G,+GAA+G;CAC/G,+GAA+G;CAC/G,8GAA8G;CAC9G,4GAA4G;AAC7G;;AAEA,kBAAkB;AAClB;CACC,aAAa;AACd;AACA;CACC,kBAAkB;CAClB,MAAM;CACN,YAAY;CACZ,WAAW;CACX,mCAAmC;CACnC,UAAU;AACX;AACA;CACC,QAAQ;CACR,SAAS;CACT,gCAAgC;CAChC,kBAAkB;CAClB,oCAAoC;CACpC,gCAAgC;CAChC,mBAAmB;AACpB;AACA;CACC,WAAW;AACZ;AACA;CACC,4BAA4B;CAC5B,YAAY;CACZ,WAAW;AACZ;AACA;CACC,aAAa;CACb,sBAAsB;CACtB,aAAa;CACb,WAAW;AACZ;AACA;CACC,eAAe;CACf,aAAa;CACb,gBAAgB;CAChB,kBAAkB;CAClB,uBAAuB;CACvB,YAAY;AACb;AACA;CACC,gBAAgB;CAChB,WAAW;CACX,aAAa;CACb,yBAAyB;CACzB,SAAS;AACV;;AAEA,eAAe;AACf;CACC,WAAW;AACZ;AACA;CACC,sCAAsC;CACtC,mBAAmB;CACnB,aAAa;CACb,sBAAsB;CACtB,mBAAmB;CACnB,uBAAuB;CACvB,SAAS;CACT,WAAW;CACX,sBAAsB;AACvB;AACA;CACC,aAAa;CACb,kBAAkB;CAClB,WAAW;CACX,gBAAgB;CAChB,YAAY;AACb;AACA;CACC,gBAAgB;CAChB,iBAAiB;CACjB,WAAW;CACX,UAAU;CACV,aAAa;AACd;AACA;CACC,WAAW;CACX,aAAa;CACb,sBAAsB;AACvB;AACA,kCAAkC;AAClC;CACC,aAAa;CACb,mBAAmB;CACnB,SAAS;AACV;AACA;CACC,WAAW;AACZ;AACA;CACC,WAAW;AACZ;AACA;;CAEC,kBAAkB;CAClB,iBAAiB;CACjB,uBAAuB;CACvB,mBAAmB;CACnB,aAAa;CACb,kBAAkB;CAClB,uBAAuB;CACvB,QAAQ;AACT;AACA;CACC,eAAe;CACf,cAAc;CACd,SAAS;AACV;AACA,uBAAuB;AACvB;CACC,gBAAgB;CAChB,kBAAkB;CAClB,SAAS;CACT,oCAAoC;CACpC,mBAAmB;CACnB,YAAY;CACZ,aAAa;CACb,6CAA6C;CAC7C,UAAU;AACX;AACA;CACC,gBAAgB;CAChB,SAAS;CACT,UAAU;CACV,aAAa;CACb,sBAAsB;AACvB;AACA;CACC,eAAe;CACf,aAAa;CACb,aAAa;CACb,SAAS;CACT,mBAAmB;AACpB;AACA;CACC,WAAW;AACZ;AACA;CACC,cAAc;AACf;AACA;CACC,kCAAkC;AACnC;AACA;CACC,oCAAoC;AACrC;AACA;CACC,iCAAiC;AAClC;AACA;CACC,yBAAyB;CACzB,YAAY;AACb;AACA;CACC,sBAAsB;CACtB,oCAAoC;CACpC,oCAAoC;AACrC;AACA;CACC,cAAc;AACf;;AAEA;CACC,eAAe;CACf,aAAa;CACb,mBAAmB;CACnB,SAAS;CACT,yBAAyB;CACzB,gBAAgB;CAChB,+BAA+B;CAC/B,gBAAgB;AACjB;AACA,yCAAyC;AACzC;CACC,aAAa;CACb,SAAS;AACV;AACA;CACC,gBAAgB;CAChB,SAAS;CACT,iBAAiB;CACjB,YAAY;CACZ,kBAAkB;CAClB,iBAAiB;CACjB,gCAAgC;AACjC;AACA;CACC,YAAY;CACZ,mDAAmD;AACpD;AACA;CACC,YAAY;CACZ,sDAAsD;AACvD;AACA;CACC,yDAAyD;AAC1D;AACA;CACC,4DAA4D;AAC7D;AACA;CACC,iCAAiC;AAClC;AACA;CACC,oCAAoC;AACrC;;AAEA;CACC;EACC,mBAAmB;EACnB,mBAAmB;EACnB,8BAA8B;CAC/B;CACA,gEAAgE;CAChE;EACC,aAAa;EACb,2BAA2B;EAC3B,aAAa;EACb,gBAAgB;EAChB,cAAc;CACf;CACA;EACC,uBAAuB;CACxB;AACD;;AAEA;CACC;EACC,aAAa;CACd;CACA;EACC,aAAa;CACd;CACA;EACC,kBAAkB;CACnB;AACD",sourcesContent:[":root {\n\t--add-task-btn-color: invert(43%) sepia(57%) saturate(7479%) hue-rotate(354deg) brightness(95%) contrast(87%);\n\t--add-task-btn-desktop-color: rgb(54, 141, 218);\n\t--add-task-btn-desktop-color-hover: rgb(0, 98, 164);\n\t--cancel-task-btn-desktop-color: rgb(227, 67, 67);\n\t--cancel-task-btn-desktop-color-hover: rgb(177, 24, 11);\n\t--cancel-task-btn-color: invert(66%) sepia(3%) saturate(409%) hue-rotate(179deg) brightness(94%) contrast(91%);\n\t--priority-high-color: invert(23%) sepia(89%) saturate(6106%) hue-rotate(344deg) brightness(93%) contrast(114%);\n\t--priority-medium-color: invert(69%) sepia(42%) saturate(3413%) hue-rotate(5deg) brightness(112%) contrast(98%);\n\t--priority-low-color: invert(65%) sepia(87%) saturate(1264%) hue-rotate(136deg) brightness(103%) contrast(98%);\n\t--priority-none-color: invert(0%) sepia(1%) saturate(7499%) hue-rotate(338deg) brightness(93%) contrast(95%);\n}\n\n/* PROJECT MODAL */\n.hidden {\n\tdisplay: none;\n}\n.project-modal-background {\n\tposition: absolute;\n\ttop: 0;\n\theight: 100%;\n\twidth: 100%;\n\tbackground-color: rgb(0, 0, 0, 0.5);\n\tz-index: 1;\n}\n.project-modal-container {\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tposition: absolute;\n\tbackground-color: rgb(255, 255, 255);\n\twidth: clamp(300px, 80vw, 600px);\n\tborder-radius: 10px;\n}\n.modal-btn-container {\n\twidth: 50vw;\n}\n.project-modal-container header {\n\tborder-radius: 10px 10px 0 0;\n\theight: 50px;\n\twidth: 100%;\n}\n.project-modal-container form {\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 30px;\n\twidth: 100%;\n}\n.project-modal-container form input {\n\tmargin-top: 5px;\n\toutline: none;\n\tappearance: none;\n\tborder-radius: 5px;\n\tborder: 1px solid black;\n\tpadding: 5px;\n}\n.modal-btn-container {\n\tmargin-top: 30px;\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tgap: 10px;\n}\n\n/* Task Modal */\n.task-modal-container {\n\twidth: 100%;\n}\n.task-modal-container form {\n\tborder: 1.5px solid rgb(174, 174, 174);\n\tborder-radius: 10px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tgap: 10px;\n\twidth: 100%;\n\tpadding: 20px 10px 5px;\n}\n.task-modal-container form input {\n\toutline: none;\n\tfont-size: 1.03rem;\n\twidth: 100%;\n\tappearance: none;\n\tborder: none;\n}\n.task-modal-container .error-message {\n\tmargin-left: 5px;\n\tmargin-top: -10px;\n\twidth: 100%;\n\tcolor: red;\n\tdisplay: none;\n}\n.task-modal-container .bottom-tabs {\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n}\n/* Due date and priority buttons */\n.option-container {\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 10px;\n}\n.option-container img {\n\twidth: 25px;\n}\n.submit-close-container img {\n\twidth: 35px;\n}\n.due-date-container,\n.priority-container {\n\tposition: relative;\n\tpadding: 0px 10px;\n\tborder: 1px solid black;\n\tborder-radius: 10px;\n\tdisplay: flex;\n\talign-self: center;\n\tjustify-content: center;\n\tgap: 5px;\n}\n.option-container p {\n\tcursor: pointer;\n\tline-height: 2;\n\tmargin: 0;\n}\n/* Priority Container */\n.dropdown-container {\n\toverflow: hidden;\n\tposition: absolute;\n\ttop: 32px;\n\tbackground-color: rgb(249, 249, 249);\n\tborder-radius: 12px;\n\twidth: 200px;\n\tdisplay: none;\n\tbox-shadow: 0px 0px 10px 0px rgb(207 207 207);\n\tz-index: 1;\n}\n.dropdown-container ul {\n\tlist-style: none;\n\tmargin: 0;\n\tpadding: 0;\n\tdisplay: flex;\n\tflex-direction: column;\n}\n.dropdown-container li {\n\tcursor: pointer;\n\tpadding: 10px;\n\tdisplay: flex;\n\tgap: 10px;\n\talign-items: center;\n}\n.dropdown-container li img {\n\twidth: 27px;\n}\n.dropdown-container li p {\n\tline-height: 1;\n}\n.dropdown-container li:first-child img {\n\tfilter: var(--priority-high-color);\n}\n.dropdown-container li:nth-child(2) img {\n\tfilter: var(--priority-medium-color);\n}\n.dropdown-container li:last-child img {\n\tfilter: var(--priority-low-color);\n}\n.priority-container .dropdown-container li:hover {\n\tbackground-color: #e8e8e8;\n\tcolor: black;\n}\n.priority-container:focus {\n\tcolor: rgb(58, 58, 58);\n\tborder: 1px solid rgb(165, 165, 165);\n\tbackground-color: rgb(230, 230, 230);\n}\n.priority-container .dropdown-container.active {\n\tdisplay: block;\n}\n\n.submit-close-container {\n\tcursor: pointer;\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 10px;\n\tjustify-content: flex-end;\n\tmargin-top: 15px;\n\tborder-top: 1.5px solid #a7a7a7;\n\tpadding-top: 5px;\n}\n/* add task and close task btn [DESKTOP]*/\n.submit-close-container.desktop {\n\tdisplay: none;\n\tgap: 15px;\n}\n.submit-close-container.desktop button {\n\tappearance: none;\n\tmargin: 0;\n\tfont-size: 1.1rem;\n\tborder: none;\n\tborder-radius: 7px;\n\tpadding: 7px 13px;\n\ttransition: all 0.3s ease-in-out;\n}\n.submit-close-container.desktop .submit-task-btn {\n\tcolor: white;\n\tbackground-color: var(--add-task-btn-desktop-color);\n}\n.submit-close-container.desktop .cancel-task-btn {\n\tcolor: white;\n\tbackground-color: var(--cancel-task-btn-desktop-color);\n}\n.submit-close-container.desktop .submit-task-btn:hover {\n\tbackground-color: var(--add-task-btn-desktop-color-hover);\n}\n.submit-close-container.desktop .cancel-task-btn:hover {\n\tbackground-color: var(--cancel-task-btn-desktop-color-hover);\n}\n.submit-close-container.mobile .submit-task-btn {\n\tfilter: var(--add-task-btn-color);\n}\n.submit-close-container.mobile .cancel-task-btn {\n\tfilter: var(--cancel-task-btn-color);\n}\n\n@media screen and (min-width: 396px) {\n\t.task-modal-container .bottom-tabs {\n\t\tflex-direction: row;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t}\n\t/* Change the bottom submit tabs to align with the option tabs */\n\t.submit-close-container {\n\t\tmargin-top: 0;\n\t\tjustify-content: flex-start;\n\t\tmargin-top: 0;\n\t\tborder-top: none;\n\t\tpadding-top: 0;\n\t}\n\t.task-modal-container form {\n\t\tpadding: 20px 10px 10px;\n\t}\n}\n\n@media screen and (min-width: 832px) {\n\t.submit-close-container.desktop {\n\t\tdisplay: flex;\n\t}\n\t.submit-close-container.mobile {\n\t\tdisplay: none;\n\t}\n\t.task-modal-container form {\n\t\tpadding: 15px 15px;\n\t}\n}\n"],sourceRoot:""}]);const A=i},342:(t,n,e)=>{e.d(n,{Z:()=>A});var r=e(537),o=e.n(r),a=e(645),i=e.n(a)()(o());i.push([t.id,':root {\n\t--roundCheckboxColor: #57c2ef;\n\t--faded-color: rgb(155, 155, 155);\n\t--completed-background: rgb(240, 245, 248);\n}\n/** OVERALL TASK LIST **/\n.task-list {\n\tmargin-top: 10px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: flex-start;\n\tjustify-content: center;\n\twidth: 100%;\n\tgap: 10px;\n}\n\n/** Individual Tasks **/\n.task-info-container {\n\twidth: 100%;\n\tpadding: 5px;\n\tborder-bottom: 1px solid rgb(192, 192, 192);\n\tfont-size: 1.1rem;\n\tdisplay: flex;\n\tflex-flow: column;\n\tgap: 5px;\n}\n.task-info-container p {\n\tmargin: 0;\n}\n.task-info-container .task-title {\n\tfont-size: 1.2rem;\n}\n.task-info-container .task-description {\n\tcolor: rgb(83, 83, 83);\n}\n.task-top-container {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n}\n.task-inner-left-container {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 10px;\n}\n.task-inner-right-container {\n\tdisplay: flex;\n\tgap: 10px;\n\talign-items: center;\n}\n\n/* priority flags & delete icon in tasks */\nimg.priority-flag, img.trash-button{\n\twidth: 30px;\n}\n\n/* Fills in flag in modal and tasks */\nimg.flag-high {\n\tfilter: var(--priority-high-color);\n}\nimg.flag-medium {\n\tfilter: var(--priority-medium-color);\n}\nimg.flag-low {\n\tfilter: var(--priority-low-color);\n}\n\n/** "Add Task" button **/\n.add-task-btn {\n\tcursor: pointer;\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: flex-start;\n}\n.add-task-btn img {\n\twidth: 30px;\n}\n\n/** Round checkbox btn **/\n.roundCheckBtn {\n\tposition: relative;\n}\n.roundCheckBtn label {\n\tbackground-color: #fff;\n\tborder: 1px solid #ccc;\n\tborder-radius: 50%;\n\tcursor: pointer;\n\theight: 25px;\n\twidth: 25px;\n\tdisplay: flex;\n}\n/* This is the check icon that appears when checkbox is active */\n.roundCheckBtn label:after {\n\tcontent: "";\n\tborder: 2px solid #fff;\n\tborder-top: none;\n\tborder-right: none;\n\theight: 5px;\n\twidth: 11px;\n\tleft: 6px;\n\ttop: 7px;\n\topacity: 0;\n\tposition: absolute;\n\ttransform: rotate(-45deg);\n}\n.roundCheckBtn input[type="checkbox"] {\n\tvisibility: hidden;\n\tposition: absolute;\n}\n.roundCheckBtn input[type="checkbox"]:checked + label {\n\tbackground-color: var(--roundCheckboxColor);\n\tborder-color: var(--roundCheckboxColor);\n}\n.roundCheckBtn input[type="checkbox"]:checked + label:after {\n\topacity: 1;\n}\n\n.taskComplete {\n\ttext-decoration: line-through;\n\tcolor: var(--faded-color);\n\tbackground-color: var(--completed-background);\n}\n',"",{version:3,sources:["webpack://./src/styles/task.css"],names:[],mappings:"AAAA;CACC,6BAA6B;CAC7B,iCAAiC;CACjC,0CAA0C;AAC3C;AACA,wBAAwB;AACxB;CACC,gBAAgB;CAChB,aAAa;CACb,sBAAsB;CACtB,uBAAuB;CACvB,uBAAuB;CACvB,WAAW;CACX,SAAS;AACV;;AAEA,uBAAuB;AACvB;CACC,WAAW;CACX,YAAY;CACZ,2CAA2C;CAC3C,iBAAiB;CACjB,aAAa;CACb,iBAAiB;CACjB,QAAQ;AACT;AACA;CACC,SAAS;AACV;AACA;CACC,iBAAiB;AAClB;AACA;CACC,sBAAsB;AACvB;AACA;CACC,aAAa;CACb,mBAAmB;CACnB,8BAA8B;AAC/B;AACA;CACC,aAAa;CACb,uBAAuB;CACvB,mBAAmB;CACnB,SAAS;AACV;AACA;CACC,aAAa;CACb,SAAS;CACT,mBAAmB;AACpB;;AAEA,0CAA0C;AAC1C;CACC,WAAW;AACZ;;AAEA,qCAAqC;AACrC;CACC,kCAAkC;AACnC;AACA;CACC,oCAAoC;AACrC;AACA;CACC,iCAAiC;AAClC;;AAEA,wBAAwB;AACxB;CACC,eAAe;CACf,WAAW;CACX,aAAa;CACb,2BAA2B;AAC5B;AACA;CACC,WAAW;AACZ;;AAEA,yBAAyB;AACzB;CACC,kBAAkB;AACnB;AACA;CACC,sBAAsB;CACtB,sBAAsB;CACtB,kBAAkB;CAClB,eAAe;CACf,YAAY;CACZ,WAAW;CACX,aAAa;AACd;AACA,gEAAgE;AAChE;CACC,WAAW;CACX,sBAAsB;CACtB,gBAAgB;CAChB,kBAAkB;CAClB,WAAW;CACX,WAAW;CACX,SAAS;CACT,QAAQ;CACR,UAAU;CACV,kBAAkB;CAClB,yBAAyB;AAC1B;AACA;CACC,kBAAkB;CAClB,kBAAkB;AACnB;AACA;CACC,2CAA2C;CAC3C,uCAAuC;AACxC;AACA;CACC,UAAU;AACX;;AAEA;CACC,6BAA6B;CAC7B,yBAAyB;CACzB,6CAA6C;AAC9C",sourcesContent:[':root {\n\t--roundCheckboxColor: #57c2ef;\n\t--faded-color: rgb(155, 155, 155);\n\t--completed-background: rgb(240, 245, 248);\n}\n/** OVERALL TASK LIST **/\n.task-list {\n\tmargin-top: 10px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: flex-start;\n\tjustify-content: center;\n\twidth: 100%;\n\tgap: 10px;\n}\n\n/** Individual Tasks **/\n.task-info-container {\n\twidth: 100%;\n\tpadding: 5px;\n\tborder-bottom: 1px solid rgb(192, 192, 192);\n\tfont-size: 1.1rem;\n\tdisplay: flex;\n\tflex-flow: column;\n\tgap: 5px;\n}\n.task-info-container p {\n\tmargin: 0;\n}\n.task-info-container .task-title {\n\tfont-size: 1.2rem;\n}\n.task-info-container .task-description {\n\tcolor: rgb(83, 83, 83);\n}\n.task-top-container {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n}\n.task-inner-left-container {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 10px;\n}\n.task-inner-right-container {\n\tdisplay: flex;\n\tgap: 10px;\n\talign-items: center;\n}\n\n/* priority flags & delete icon in tasks */\nimg.priority-flag, img.trash-button{\n\twidth: 30px;\n}\n\n/* Fills in flag in modal and tasks */\nimg.flag-high {\n\tfilter: var(--priority-high-color);\n}\nimg.flag-medium {\n\tfilter: var(--priority-medium-color);\n}\nimg.flag-low {\n\tfilter: var(--priority-low-color);\n}\n\n/** "Add Task" button **/\n.add-task-btn {\n\tcursor: pointer;\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: flex-start;\n}\n.add-task-btn img {\n\twidth: 30px;\n}\n\n/** Round checkbox btn **/\n.roundCheckBtn {\n\tposition: relative;\n}\n.roundCheckBtn label {\n\tbackground-color: #fff;\n\tborder: 1px solid #ccc;\n\tborder-radius: 50%;\n\tcursor: pointer;\n\theight: 25px;\n\twidth: 25px;\n\tdisplay: flex;\n}\n/* This is the check icon that appears when checkbox is active */\n.roundCheckBtn label:after {\n\tcontent: "";\n\tborder: 2px solid #fff;\n\tborder-top: none;\n\tborder-right: none;\n\theight: 5px;\n\twidth: 11px;\n\tleft: 6px;\n\ttop: 7px;\n\topacity: 0;\n\tposition: absolute;\n\ttransform: rotate(-45deg);\n}\n.roundCheckBtn input[type="checkbox"] {\n\tvisibility: hidden;\n\tposition: absolute;\n}\n.roundCheckBtn input[type="checkbox"]:checked + label {\n\tbackground-color: var(--roundCheckboxColor);\n\tborder-color: var(--roundCheckboxColor);\n}\n.roundCheckBtn input[type="checkbox"]:checked + label:after {\n\topacity: 1;\n}\n\n.taskComplete {\n\ttext-decoration: line-through;\n\tcolor: var(--faded-color);\n\tbackground-color: var(--completed-background);\n}\n'],sourceRoot:""}]);const A=i},641:(t,n,e)=>{e.d(n,{Z:()=>A});var r=e(537),o=e.n(r),a=e(645),i=e.n(a)()(o());i.push([t.id,':root {\n\t--nav-bar-background: rgb(237, 237, 236);\n\t--top-nav-background: rgb(226, 106, 82);\n\t--footer-background: rgb(219, 219, 219);\n\t--nav-tab-active-color: rgb(238, 156, 54);\n\t--nav-tab-hover-color: rgb(238, 88, 54);\n}\n* {\n\tbox-sizing: border-box;\n}\n\nhtml,\nbody {\n\theight: 100%;\n\tmargin: 0;\n\tmin-height: 100vh;\n}\nbody {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.add-task-btn.hidden {\n\tdisplay: none;\n}\n\n/* ********************** */\n/*** HEADER ***/\nheader {\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 20px;\n\tbackground-color: var(--top-nav-background);\n\twidth: 100vw;\n\tpadding: 20px 20px;\n}\nh1 {\n\tmargin: 0;\n}\nimg#todo-icon{\n\tdisplay: none;\n\twidth: 50px;\n}\n/** Hamburger **/\n.hamburger {\n\tmargin-left: auto;\n\tdisplay: block;\n\tcursor: pointer;\n}\n.hamburger .bar {\n\tdisplay: block;\n\tbackground-color: white;\n\twidth: 25px;\n\theight: 3px;\n\tmargin: 5px;\n\ttransition: all 0.5s ease-in-out;\n}\n.hamburger.active .bar:nth-child(1) {\n\ttransform: translateY(8px) rotate(45deg);\n}\n.hamburger.active .bar:nth-child(2) {\n\topacity: 0;\n}\n.hamburger.active .bar:nth-child(3) {\n\ttransform: translateY(-8px) rotate(-45deg);\n}\n/** Search Bar AREA **/\n.search-container {\n\tcursor: pointer;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 5px;\n\tbackground-color: white;\n\tborder-radius: 15px;\n}\n.search-container img {\n\twidth: 30px;\n}\n.search-bar-input {\n\toutline: none;\n\tpadding: 0;\n\tfont-size: 1.1rem;\n\tmargin-left: 5px;\n\twidth: 100%;\n\tborder: none;\n\tborder-radius: 10px;\n\tdisplay: flex;\n\talign-items: center;\n\tline-height: 30px;\n}\n/* Disable for Mobile view */\n.container1 {\n\tdisplay: none;\n}\n.container2 {\n\tdisplay: block;\n\tposition: relative;\n\twidth: 40px;\n\theight: 40px;\n}\n/* \n * All the color goes into the search-container. \n * We will use the container as the background and then the search-bar-input\n * to expand out and in when the container2 is focused-in.\n*/\n.container2 .search-container {\n\tposition: absolute;\n\tborder-radius: 50px;\n}\n.container2 .search-bar-input {\n\tmargin: 0;\n\twidth: 0;\n\ttransition: all 0.3s ease-in-out;\n}\n.container2 .search-button {\n\theight: 25px;\n\twidth: 25px;\n\tborder-radius: 50%;\n}\n/* \n* To prevent container from shrinking when click again, \n* we need to add .search-bar-input\'s focus. Also the padding is so the blinking\n* "|" line wont disappear into the borders\n*/\n.container2:focus .search-bar-input,\n.container2 .search-bar-input:focus,\n.container2 .search-bar-input:not(:placeholder-shown) {\n\tpadding: 0 6px;\n\tvisibility: visible;\n\twidth: 37vw;\n}\n\n/* ********************** */\n/*** MAIN ***/\nmain {\n\theight: 100%;\n\tflex: 1;\n\tdisplay: flex;\n}\n/* NAVBAR */\nmain .side-nav {\n\tpadding-top: 20px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tbackground-color: var(--nav-bar-background);\n\twidth: 0;\n\toverflow-y: auto;\n\ttransition: all 0.3s ease-in-out;\n\tposition: fixed;\n\tz-index: 1;\n\theight: 100%;\n}\nmain .side-nav.active {\n\twidth: 80vw;\n}\n.navtab {\n\tcursor: pointer;\n\tmargin: 10px 10px;\n\tborder: 2px solid rgb(255, 255, 255);\n\tborder-radius: 10px;\n\tbackground-color: rgb(255, 255, 255);\n\tpadding: 10px;\n\twidth: 80%;\n}\n.navtab:focus,\n.navtab:hover,\n.navtab.active {\n\toutline: 2px solid var(--nav-tab-active-color); \n}\n\n/* Project SideNav  */\n.project-header {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tgap: 10px;\n\twidth: 100%;\n}\n.project-container {\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tgap: 15px;\n}\n.project-header .new-project-btn {\n\tcursor: pointer;\n\tborder: 1px solid black;\n\tborder-radius: 50%;\n\twidth: 30px;\n\theight: 30px;\n\ttransition: all 0.5s ease-in-out;\n}\n.project-header .new-project-btn:hover {\n\ttransform: rotate(360deg);\n}\n.project-link-div {\n\tcursor: pointer;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tfont-size: 1.2rem;\n\tborder: 1px solid rgb(138, 138, 138);\n\tborder-radius: 10px;\n\twidth: 80%;\n\theight: 30px;\n\tpadding: 5px;\n\ttransition: all 0.3s ease-in-out;\n}\n.project-link-div:focus {\n\tborder: 1px solid rgb(25, 25, 25);\n}\n.project-link-div p {\n\tfont-size: 1.2rem;\n\tflex: 1;\n\toverflow: hidden;\n}\n.project-link-div .editIcon {\n\twidth: 23px;\n}\n.project-link-div .deleteIcon {\n\tposition: relative;\n\ttop: 2px;\n\twidth: 23px;\n}\n/* MAIN Container */\nmain .main-content {\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\twidth: 100%;\n\tpadding: 30px;\n\tbackground-color: rgb(255, 255, 255);\n\toverflow-y: auto;\n}\n.taskInfoHeader {\n\twidth: 100%;\n\theight: 30px;\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: center;\n}\n.taskInfoHeader h2 {\n\tposition: relative;\n}\n.taskInfoHeader h2::after {\n\tcontent: "";\n\tposition: absolute;\n\tleft: 0;\n\tbackground-color: rgb(171, 51, 51);\n\ttop: 30px;\n\theight: 2px;\n\twidth: 100%;\n}\n/* HORRAY MESSAGE for empty task list */\n.horrayMessage {\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 3px;\n\tposition: relative;\n\tleft: 50%;\n\ttop:50%;\n\ttransform: translate(-50%, -50%);\n\tmargin-top: -5px;\n}\n.horrayMessage .text1 {\n\tfont-size: 2rem;\n\tmargin: 0;\n}\n.horrayMessage .text2 {\n\tfont-size: 1rem;\n\tmargin: 0;\n\tmargin-bottom: 5px;\n}\n.horrayMessage img {\n\twidth: 80vw;\n\tborder-radius: 50%;\n}\n\n\n/* ********************** */\n/*** FOOTER ***/\nfooter {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 10px;\n\twidth: 100vw;\n\theight: 40px;\n\tbackground-color: var(--footer-background);\n\tz-index: 1;\n}\nfooter img {\n\twidth: 30px;\n\ttransition: all 0.5s ease-in-out;\n}\nfooter img:hover {\n\ttransform: rotate(360deg);\n}\n\n@media screen and (min-width: 695px) {\n\t/* HEADER */\n\theader {\n\t\tgap: 30px;\n\t\tpadding: 15px 20px;\n\t}\n\timg#todo-icon{\n\t\tdisplay: block;\n\t\tmargin-right: -15px;\n\t}\n\t.search-container {\n\t\twidth: 30vw;\n\t}\n\t.container1 {\n\t\tdisplay: flex;\n\t}\n\t.container2 {\n\t\tdisplay: none;\n\t}\n\t.hamburger {\n\t\tdisplay: none;\n\t}\n\t/* MAIN */\n\tmain .side-nav,\n\tmain .side-nav.active {\n\t\twidth: 300px;\n\t\tposition: static;\n\t}\n\t.horrayMessage img {\n\t\twidth: 80%;\n\t}\n}\n@media screen and (min-width: 100px) {\n\t.horrayMessage img {\n\t\twidth: 300px;\n\t}\n}',"",{version:3,sources:["webpack://./src/styles/website.css"],names:[],mappings:"AAAA;CACC,wCAAwC;CACxC,uCAAuC;CACvC,uCAAuC;CACvC,yCAAyC;CACzC,uCAAuC;AACxC;AACA;CACC,sBAAsB;AACvB;;AAEA;;CAEC,YAAY;CACZ,SAAS;CACT,iBAAiB;AAClB;AACA;CACC,aAAa;CACb,sBAAsB;AACvB;;AAEA;CACC,aAAa;AACd;;AAEA,2BAA2B;AAC3B,eAAe;AACf;CACC,aAAa;CACb,mBAAmB;CACnB,SAAS;CACT,2CAA2C;CAC3C,YAAY;CACZ,kBAAkB;AACnB;AACA;CACC,SAAS;AACV;AACA;CACC,aAAa;CACb,WAAW;AACZ;AACA,gBAAgB;AAChB;CACC,iBAAiB;CACjB,cAAc;CACd,eAAe;AAChB;AACA;CACC,cAAc;CACd,uBAAuB;CACvB,WAAW;CACX,WAAW;CACX,WAAW;CACX,gCAAgC;AACjC;AACA;CACC,wCAAwC;AACzC;AACA;CACC,UAAU;AACX;AACA;CACC,0CAA0C;AAC3C;AACA,sBAAsB;AACtB;CACC,eAAe;CACf,aAAa;CACb,mBAAmB;CACnB,uBAAuB;CACvB,YAAY;CACZ,uBAAuB;CACvB,mBAAmB;AACpB;AACA;CACC,WAAW;AACZ;AACA;CACC,aAAa;CACb,UAAU;CACV,iBAAiB;CACjB,gBAAgB;CAChB,WAAW;CACX,YAAY;CACZ,mBAAmB;CACnB,aAAa;CACb,mBAAmB;CACnB,iBAAiB;AAClB;AACA,4BAA4B;AAC5B;CACC,aAAa;AACd;AACA;CACC,cAAc;CACd,kBAAkB;CAClB,WAAW;CACX,YAAY;AACb;AACA;;;;CAIC;AACD;CACC,kBAAkB;CAClB,mBAAmB;AACpB;AACA;CACC,SAAS;CACT,QAAQ;CACR,gCAAgC;AACjC;AACA;CACC,YAAY;CACZ,WAAW;CACX,kBAAkB;AACnB;AACA;;;;CAIC;AACD;;;CAGC,cAAc;CACd,mBAAmB;CACnB,WAAW;AACZ;;AAEA,2BAA2B;AAC3B,aAAa;AACb;CACC,YAAY;CACZ,OAAO;CACP,aAAa;AACd;AACA,WAAW;AACX;CACC,iBAAiB;CACjB,aAAa;CACb,sBAAsB;CACtB,mBAAmB;CACnB,2CAA2C;CAC3C,QAAQ;CACR,gBAAgB;CAChB,gCAAgC;CAChC,eAAe;CACf,UAAU;CACV,YAAY;AACb;AACA;CACC,WAAW;AACZ;AACA;CACC,eAAe;CACf,iBAAiB;CACjB,oCAAoC;CACpC,mBAAmB;CACnB,oCAAoC;CACpC,aAAa;CACb,UAAU;AACX;AACA;;;CAGC,8CAA8C;AAC/C;;AAEA,qBAAqB;AACrB;CACC,aAAa;CACb,mBAAmB;CACnB,uBAAuB;CACvB,SAAS;CACT,WAAW;AACZ;AACA;CACC,WAAW;CACX,aAAa;CACb,sBAAsB;CACtB,mBAAmB;CACnB,SAAS;AACV;AACA;CACC,eAAe;CACf,uBAAuB;CACvB,kBAAkB;CAClB,WAAW;CACX,YAAY;CACZ,gCAAgC;AACjC;AACA;CACC,yBAAyB;AAC1B;AACA;CACC,eAAe;CACf,aAAa;CACb,8BAA8B;CAC9B,mBAAmB;CACnB,iBAAiB;CACjB,oCAAoC;CACpC,mBAAmB;CACnB,UAAU;CACV,YAAY;CACZ,YAAY;CACZ,gCAAgC;AACjC;AACA;CACC,iCAAiC;AAClC;AACA;CACC,iBAAiB;CACjB,OAAO;CACP,gBAAgB;AACjB;AACA;CACC,WAAW;AACZ;AACA;CACC,kBAAkB;CAClB,QAAQ;CACR,WAAW;AACZ;AACA,mBAAmB;AACnB;CACC,OAAO;CACP,aAAa;CACb,sBAAsB;CACtB,mBAAmB;CACnB,WAAW;CACX,aAAa;CACb,oCAAoC;CACpC,gBAAgB;AACjB;AACA;CACC,WAAW;CACX,YAAY;CACZ,aAAa;CACb,2BAA2B;CAC3B,mBAAmB;AACpB;AACA;CACC,kBAAkB;AACnB;AACA;CACC,WAAW;CACX,kBAAkB;CAClB,OAAO;CACP,kCAAkC;CAClC,SAAS;CACT,WAAW;CACX,WAAW;AACZ;AACA,uCAAuC;AACvC;CACC,aAAa;CACb,sBAAsB;CACtB,uBAAuB;CACvB,mBAAmB;CACnB,QAAQ;CACR,kBAAkB;CAClB,SAAS;CACT,OAAO;CACP,gCAAgC;CAChC,gBAAgB;AACjB;AACA;CACC,eAAe;CACf,SAAS;AACV;AACA;CACC,eAAe;CACf,SAAS;CACT,kBAAkB;AACnB;AACA;CACC,WAAW;CACX,kBAAkB;AACnB;;;AAGA,2BAA2B;AAC3B,eAAe;AACf;CACC,aAAa;CACb,uBAAuB;CACvB,mBAAmB;CACnB,SAAS;CACT,YAAY;CACZ,YAAY;CACZ,0CAA0C;CAC1C,UAAU;AACX;AACA;CACC,WAAW;CACX,gCAAgC;AACjC;AACA;CACC,yBAAyB;AAC1B;;AAEA;CACC,WAAW;CACX;EACC,SAAS;EACT,kBAAkB;CACnB;CACA;EACC,cAAc;EACd,mBAAmB;CACpB;CACA;EACC,WAAW;CACZ;CACA;EACC,aAAa;CACd;CACA;EACC,aAAa;CACd;CACA;EACC,aAAa;CACd;CACA,SAAS;CACT;;EAEC,YAAY;EACZ,gBAAgB;CACjB;CACA;EACC,UAAU;CACX;AACD;AACA;CACC;EACC,YAAY;CACb;AACD",sourcesContent:[':root {\n\t--nav-bar-background: rgb(237, 237, 236);\n\t--top-nav-background: rgb(226, 106, 82);\n\t--footer-background: rgb(219, 219, 219);\n\t--nav-tab-active-color: rgb(238, 156, 54);\n\t--nav-tab-hover-color: rgb(238, 88, 54);\n}\n* {\n\tbox-sizing: border-box;\n}\n\nhtml,\nbody {\n\theight: 100%;\n\tmargin: 0;\n\tmin-height: 100vh;\n}\nbody {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.add-task-btn.hidden {\n\tdisplay: none;\n}\n\n/* ********************** */\n/*** HEADER ***/\nheader {\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 20px;\n\tbackground-color: var(--top-nav-background);\n\twidth: 100vw;\n\tpadding: 20px 20px;\n}\nh1 {\n\tmargin: 0;\n}\nimg#todo-icon{\n\tdisplay: none;\n\twidth: 50px;\n}\n/** Hamburger **/\n.hamburger {\n\tmargin-left: auto;\n\tdisplay: block;\n\tcursor: pointer;\n}\n.hamburger .bar {\n\tdisplay: block;\n\tbackground-color: white;\n\twidth: 25px;\n\theight: 3px;\n\tmargin: 5px;\n\ttransition: all 0.5s ease-in-out;\n}\n.hamburger.active .bar:nth-child(1) {\n\ttransform: translateY(8px) rotate(45deg);\n}\n.hamburger.active .bar:nth-child(2) {\n\topacity: 0;\n}\n.hamburger.active .bar:nth-child(3) {\n\ttransform: translateY(-8px) rotate(-45deg);\n}\n/** Search Bar AREA **/\n.search-container {\n\tcursor: pointer;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 5px;\n\tbackground-color: white;\n\tborder-radius: 15px;\n}\n.search-container img {\n\twidth: 30px;\n}\n.search-bar-input {\n\toutline: none;\n\tpadding: 0;\n\tfont-size: 1.1rem;\n\tmargin-left: 5px;\n\twidth: 100%;\n\tborder: none;\n\tborder-radius: 10px;\n\tdisplay: flex;\n\talign-items: center;\n\tline-height: 30px;\n}\n/* Disable for Mobile view */\n.container1 {\n\tdisplay: none;\n}\n.container2 {\n\tdisplay: block;\n\tposition: relative;\n\twidth: 40px;\n\theight: 40px;\n}\n/* \n * All the color goes into the search-container. \n * We will use the container as the background and then the search-bar-input\n * to expand out and in when the container2 is focused-in.\n*/\n.container2 .search-container {\n\tposition: absolute;\n\tborder-radius: 50px;\n}\n.container2 .search-bar-input {\n\tmargin: 0;\n\twidth: 0;\n\ttransition: all 0.3s ease-in-out;\n}\n.container2 .search-button {\n\theight: 25px;\n\twidth: 25px;\n\tborder-radius: 50%;\n}\n/* \n* To prevent container from shrinking when click again, \n* we need to add .search-bar-input\'s focus. Also the padding is so the blinking\n* "|" line wont disappear into the borders\n*/\n.container2:focus .search-bar-input,\n.container2 .search-bar-input:focus,\n.container2 .search-bar-input:not(:placeholder-shown) {\n\tpadding: 0 6px;\n\tvisibility: visible;\n\twidth: 37vw;\n}\n\n/* ********************** */\n/*** MAIN ***/\nmain {\n\theight: 100%;\n\tflex: 1;\n\tdisplay: flex;\n}\n/* NAVBAR */\nmain .side-nav {\n\tpadding-top: 20px;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tbackground-color: var(--nav-bar-background);\n\twidth: 0;\n\toverflow-y: auto;\n\ttransition: all 0.3s ease-in-out;\n\tposition: fixed;\n\tz-index: 1;\n\theight: 100%;\n}\nmain .side-nav.active {\n\twidth: 80vw;\n}\n.navtab {\n\tcursor: pointer;\n\tmargin: 10px 10px;\n\tborder: 2px solid rgb(255, 255, 255);\n\tborder-radius: 10px;\n\tbackground-color: rgb(255, 255, 255);\n\tpadding: 10px;\n\twidth: 80%;\n}\n.navtab:focus,\n.navtab:hover,\n.navtab.active {\n\toutline: 2px solid var(--nav-tab-active-color); \n}\n\n/* Project SideNav  */\n.project-header {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tgap: 10px;\n\twidth: 100%;\n}\n.project-container {\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tgap: 15px;\n}\n.project-header .new-project-btn {\n\tcursor: pointer;\n\tborder: 1px solid black;\n\tborder-radius: 50%;\n\twidth: 30px;\n\theight: 30px;\n\ttransition: all 0.5s ease-in-out;\n}\n.project-header .new-project-btn:hover {\n\ttransform: rotate(360deg);\n}\n.project-link-div {\n\tcursor: pointer;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tfont-size: 1.2rem;\n\tborder: 1px solid rgb(138, 138, 138);\n\tborder-radius: 10px;\n\twidth: 80%;\n\theight: 30px;\n\tpadding: 5px;\n\ttransition: all 0.3s ease-in-out;\n}\n.project-link-div:focus {\n\tborder: 1px solid rgb(25, 25, 25);\n}\n.project-link-div p {\n\tfont-size: 1.2rem;\n\tflex: 1;\n\toverflow: hidden;\n}\n.project-link-div .editIcon {\n\twidth: 23px;\n}\n.project-link-div .deleteIcon {\n\tposition: relative;\n\ttop: 2px;\n\twidth: 23px;\n}\n/* MAIN Container */\nmain .main-content {\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\twidth: 100%;\n\tpadding: 30px;\n\tbackground-color: rgb(255, 255, 255);\n\toverflow-y: auto;\n}\n.taskInfoHeader {\n\twidth: 100%;\n\theight: 30px;\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: center;\n}\n.taskInfoHeader h2 {\n\tposition: relative;\n}\n.taskInfoHeader h2::after {\n\tcontent: "";\n\tposition: absolute;\n\tleft: 0;\n\tbackground-color: rgb(171, 51, 51);\n\ttop: 30px;\n\theight: 2px;\n\twidth: 100%;\n}\n/* HORRAY MESSAGE for empty task list */\n.horrayMessage {\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 3px;\n\tposition: relative;\n\tleft: 50%;\n\ttop:50%;\n\ttransform: translate(-50%, -50%);\n\tmargin-top: -5px;\n}\n.horrayMessage .text1 {\n\tfont-size: 2rem;\n\tmargin: 0;\n}\n.horrayMessage .text2 {\n\tfont-size: 1rem;\n\tmargin: 0;\n\tmargin-bottom: 5px;\n}\n.horrayMessage img {\n\twidth: 80vw;\n\tborder-radius: 50%;\n}\n\n\n/* ********************** */\n/*** FOOTER ***/\nfooter {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 10px;\n\twidth: 100vw;\n\theight: 40px;\n\tbackground-color: var(--footer-background);\n\tz-index: 1;\n}\nfooter img {\n\twidth: 30px;\n\ttransition: all 0.5s ease-in-out;\n}\nfooter img:hover {\n\ttransform: rotate(360deg);\n}\n\n@media screen and (min-width: 695px) {\n\t/* HEADER */\n\theader {\n\t\tgap: 30px;\n\t\tpadding: 15px 20px;\n\t}\n\timg#todo-icon{\n\t\tdisplay: block;\n\t\tmargin-right: -15px;\n\t}\n\t.search-container {\n\t\twidth: 30vw;\n\t}\n\t.container1 {\n\t\tdisplay: flex;\n\t}\n\t.container2 {\n\t\tdisplay: none;\n\t}\n\t.hamburger {\n\t\tdisplay: none;\n\t}\n\t/* MAIN */\n\tmain .side-nav,\n\tmain .side-nav.active {\n\t\twidth: 300px;\n\t\tposition: static;\n\t}\n\t.horrayMessage img {\n\t\twidth: 80%;\n\t}\n}\n@media screen and (min-width: 100px) {\n\t.horrayMessage img {\n\t\twidth: 300px;\n\t}\n}'],sourceRoot:""}]);const A=i},645:t=>{t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e="",r=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),r&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=t(n),r&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(t,e,r,o,a){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var s=0;s<t.length;s++){var d=[].concat(t[s]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),n.push(d))}},n}},667:t=>{t.exports=function(t,n){return n||(n={}),t?(t=String(t.__esModule?t.default:t),/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),n.hash&&(t+=n.hash),/["'() \t\n]|(%20)/.test(t)||n.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t):t}},537:t=>{t.exports=function(t){var n=t[1],e=t[3];if(!e)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:t=>{var n=[];function e(t){for(var e=-1,r=0;r<n.length;r++)if(n[r].identifier===t){e=r;break}return e}function r(t,r){for(var a={},i=[],A=0;A<t.length;A++){var c=t[A],s=r.base?c[0]+r.base:c[0],d=a[s]||0,l="".concat(s," ").concat(d);a[s]=d+1;var C=e(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==C)n[C].references++,n[C].updater(u);else{var p=o(u,r);r.byIndex=A,n.splice(A,0,{identifier:l,updater:p,references:1})}i.push(l)}return i}function o(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap&&n.supports===t.supports&&n.layer===t.layer)return;e.update(t=n)}else e.remove()}}t.exports=function(t,o){var a=r(t=t||[],o=o||{});return function(t){t=t||[];for(var i=0;i<a.length;i++){var A=e(a[i]);n[A].references--}for(var c=r(t,o),s=0;s<a.length;s++){var d=e(a[s]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}a=c}}},569:t=>{var n={};t.exports=function(t,e){var r=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},216:t=>{t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n,t.options),n}},565:(t,n,e)=>{t.exports=function(t){var n=e.nc;n&&t.setAttribute("nonce",n)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var r="";e.supports&&(r+="@supports (".concat(e.supports,") {")),e.media&&(r+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(r+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),r+=e.css,o&&(r+="}"),e.media&&(r+="}"),e.supports&&(r+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,t,n.options)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}},589:t=>{t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}},782:(t,n,e)=>{t.exports=e.p+"83ae2c478f96052a1352.svg"}},n={};function e(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return t[r](a,a.exports,e),a.exports}e.m=t,e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var r=n.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!t;)t=r[o--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{var t=e(379),n=e.n(t),r=e(795),o=e.n(r),a=e(569),i=e.n(a),A=e(565),c=e.n(A),s=e(216),d=e.n(s),l=e(589),C=e.n(l),u=e(641),p={};p.styleTagTransform=C(),p.setAttributes=c(),p.insert=i().bind(null,"head"),p.domAPI=o(),p.insertStyleElement=d(),n()(u.Z,p),u.Z&&u.Z.locals&&u.Z.locals;var h=e(724),m={};m.styleTagTransform=C(),m.setAttributes=c(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=d(),n()(h.Z,m),h.Z&&h.Z.locals&&h.Z.locals;var g=e(342),f={};f.styleTagTransform=C(),f.setAttributes=c(),f.insert=i().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=d(),n()(g.Z,f),g.Z&&g.Z.locals&&g.Z.locals;var b=e(285),v={};v.styleTagTransform=C(),v.setAttributes=c(),v.insert=i().bind(null,"head"),v.domAPI=o(),v.insertStyleElement=d(),n()(b.Z,v),b.Z&&b.Z.locals&&b.Z.locals;const x=e.p+"eac1a29b0fcadff53187.svg",y=e.p+"7c20ceca07cbd4998585.svg";Math.pow(10,8);var B=6e4,k=36e5;function w(t,n){if(n.length<t)throw new TypeError(t+" argument"+(t>1?"s":"")+" required, but only "+n.length+" present")}function S(t){if(null===t||!0===t||!1===t)return NaN;var n=Number(t);return isNaN(n)?n:n<0?Math.ceil(n):Math.floor(n)}var T={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},E=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,j=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,W=/^([+-])(\d{2})(?::?(\d{2}))?$/;function D(t){return t?parseInt(t):1}function M(t){return t&&parseFloat(t.replace(",","."))||0}var Y=[31,null,31,30,31,30,31,31,30,31,30,31];function U(t){return t%400==0||t%4==0&&t%100!=0}function L(t){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},L(t)}function N(t){w(1,arguments);var n=Object.prototype.toString.call(t);return t instanceof Date||"object"===L(t)&&"[object Date]"===n?new Date(t.getTime()):"number"==typeof t||"[object Number]"===n?new Date(t):("string"!=typeof t&&"[object String]"!==n||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function P(t){w(1,arguments);var n=N(t),e=n.getUTCDay(),r=(e<1?7:0)+e-1;return n.setUTCDate(n.getUTCDate()-r),n.setUTCHours(0,0,0,0),n}function q(t){w(1,arguments);var n=N(t),e=n.getUTCFullYear(),r=new Date(0);r.setUTCFullYear(e+1,0,4),r.setUTCHours(0,0,0,0);var o=P(r),a=new Date(0);a.setUTCFullYear(e,0,4),a.setUTCHours(0,0,0,0);var i=P(a);return n.getTime()>=o.getTime()?e+1:n.getTime()>=i.getTime()?e:e-1}var O={};function Z(){return O}function I(t,n){var e,r,o,a,i,A,c,s;w(1,arguments);var d=Z(),l=S(null!==(e=null!==(r=null!==(o=null!==(a=null==n?void 0:n.weekStartsOn)&&void 0!==a?a:null==n||null===(i=n.locale)||void 0===i||null===(A=i.options)||void 0===A?void 0:A.weekStartsOn)&&void 0!==o?o:d.weekStartsOn)&&void 0!==r?r:null===(c=d.locale)||void 0===c||null===(s=c.options)||void 0===s?void 0:s.weekStartsOn)&&void 0!==e?e:0);if(!(l>=0&&l<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var C=N(t),u=C.getUTCDay(),p=(u<l?7:0)+u-l;return C.setUTCDate(C.getUTCDate()-p),C.setUTCHours(0,0,0,0),C}function z(t,n){var e,r,o,a,i,A,c,s;w(1,arguments);var d=N(t),l=d.getUTCFullYear(),C=Z(),u=S(null!==(e=null!==(r=null!==(o=null!==(a=null==n?void 0:n.firstWeekContainsDate)&&void 0!==a?a:null==n||null===(i=n.locale)||void 0===i||null===(A=i.options)||void 0===A?void 0:A.firstWeekContainsDate)&&void 0!==o?o:C.firstWeekContainsDate)&&void 0!==r?r:null===(c=C.locale)||void 0===c||null===(s=c.options)||void 0===s?void 0:s.firstWeekContainsDate)&&void 0!==e?e:1);if(!(u>=1&&u<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var p=new Date(0);p.setUTCFullYear(l+1,0,u),p.setUTCHours(0,0,0,0);var h=I(p,n),m=new Date(0);m.setUTCFullYear(l,0,u),m.setUTCHours(0,0,0,0);var g=I(m,n);return d.getTime()>=h.getTime()?l+1:d.getTime()>=g.getTime()?l:l-1}function H(t,n){for(var e=t<0?"-":"",r=Math.abs(t).toString();r.length<n;)r="0"+r;return e+r}var R={y:function(t,n){var e=t.getUTCFullYear(),r=e>0?e:1-e;return H("yy"===n?r%100:r,n.length)},M:function(t,n){var e=t.getUTCMonth();return"M"===n?String(e+1):H(e+1,2)},d:function(t,n){return H(t.getUTCDate(),n.length)},a:function(t,n){var e=t.getUTCHours()/12>=1?"pm":"am";switch(n){case"a":case"aa":return e.toUpperCase();case"aaa":return e;case"aaaaa":return e[0];default:return"am"===e?"a.m.":"p.m."}},h:function(t,n){return H(t.getUTCHours()%12||12,n.length)},H:function(t,n){return H(t.getUTCHours(),n.length)},m:function(t,n){return H(t.getUTCMinutes(),n.length)},s:function(t,n){return H(t.getUTCSeconds(),n.length)},S:function(t,n){var e=n.length,r=t.getUTCMilliseconds();return H(Math.floor(r*Math.pow(10,e-3)),n.length)}};const X=R;var G={G:function(t,n,e){var r=t.getUTCFullYear()>0?1:0;switch(n){case"G":case"GG":case"GGG":return e.era(r,{width:"abbreviated"});case"GGGGG":return e.era(r,{width:"narrow"});default:return e.era(r,{width:"wide"})}},y:function(t,n,e){if("yo"===n){var r=t.getUTCFullYear(),o=r>0?r:1-r;return e.ordinalNumber(o,{unit:"year"})}return X.y(t,n)},Y:function(t,n,e,r){var o=z(t,r),a=o>0?o:1-o;return"YY"===n?H(a%100,2):"Yo"===n?e.ordinalNumber(a,{unit:"year"}):H(a,n.length)},R:function(t,n){return H(q(t),n.length)},u:function(t,n){return H(t.getUTCFullYear(),n.length)},Q:function(t,n,e){var r=Math.ceil((t.getUTCMonth()+1)/3);switch(n){case"Q":return String(r);case"QQ":return H(r,2);case"Qo":return e.ordinalNumber(r,{unit:"quarter"});case"QQQ":return e.quarter(r,{width:"abbreviated",context:"formatting"});case"QQQQQ":return e.quarter(r,{width:"narrow",context:"formatting"});default:return e.quarter(r,{width:"wide",context:"formatting"})}},q:function(t,n,e){var r=Math.ceil((t.getUTCMonth()+1)/3);switch(n){case"q":return String(r);case"qq":return H(r,2);case"qo":return e.ordinalNumber(r,{unit:"quarter"});case"qqq":return e.quarter(r,{width:"abbreviated",context:"standalone"});case"qqqqq":return e.quarter(r,{width:"narrow",context:"standalone"});default:return e.quarter(r,{width:"wide",context:"standalone"})}},M:function(t,n,e){var r=t.getUTCMonth();switch(n){case"M":case"MM":return X.M(t,n);case"Mo":return e.ordinalNumber(r+1,{unit:"month"});case"MMM":return e.month(r,{width:"abbreviated",context:"formatting"});case"MMMMM":return e.month(r,{width:"narrow",context:"formatting"});default:return e.month(r,{width:"wide",context:"formatting"})}},L:function(t,n,e){var r=t.getUTCMonth();switch(n){case"L":return String(r+1);case"LL":return H(r+1,2);case"Lo":return e.ordinalNumber(r+1,{unit:"month"});case"LLL":return e.month(r,{width:"abbreviated",context:"standalone"});case"LLLLL":return e.month(r,{width:"narrow",context:"standalone"});default:return e.month(r,{width:"wide",context:"standalone"})}},w:function(t,n,e,r){var o=function(t,n){w(1,arguments);var e=N(t),r=I(e,n).getTime()-function(t,n){var e,r,o,a,i,A,c,s;w(1,arguments);var d=Z(),l=S(null!==(e=null!==(r=null!==(o=null!==(a=null==n?void 0:n.firstWeekContainsDate)&&void 0!==a?a:null==n||null===(i=n.locale)||void 0===i||null===(A=i.options)||void 0===A?void 0:A.firstWeekContainsDate)&&void 0!==o?o:d.firstWeekContainsDate)&&void 0!==r?r:null===(c=d.locale)||void 0===c||null===(s=c.options)||void 0===s?void 0:s.firstWeekContainsDate)&&void 0!==e?e:1),C=z(t,n),u=new Date(0);return u.setUTCFullYear(C,0,l),u.setUTCHours(0,0,0,0),I(u,n)}(e,n).getTime();return Math.round(r/6048e5)+1}(t,r);return"wo"===n?e.ordinalNumber(o,{unit:"week"}):H(o,n.length)},I:function(t,n,e){var r=function(t){w(1,arguments);var n=N(t),e=P(n).getTime()-function(t){w(1,arguments);var n=q(t),e=new Date(0);return e.setUTCFullYear(n,0,4),e.setUTCHours(0,0,0,0),P(e)}(n).getTime();return Math.round(e/6048e5)+1}(t);return"Io"===n?e.ordinalNumber(r,{unit:"week"}):H(r,n.length)},d:function(t,n,e){return"do"===n?e.ordinalNumber(t.getUTCDate(),{unit:"date"}):X.d(t,n)},D:function(t,n,e){var r=function(t){w(1,arguments);var n=N(t),e=n.getTime();n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0);var r=e-n.getTime();return Math.floor(r/864e5)+1}(t);return"Do"===n?e.ordinalNumber(r,{unit:"dayOfYear"}):H(r,n.length)},E:function(t,n,e){var r=t.getUTCDay();switch(n){case"E":case"EE":case"EEE":return e.day(r,{width:"abbreviated",context:"formatting"});case"EEEEE":return e.day(r,{width:"narrow",context:"formatting"});case"EEEEEE":return e.day(r,{width:"short",context:"formatting"});default:return e.day(r,{width:"wide",context:"formatting"})}},e:function(t,n,e,r){var o=t.getUTCDay(),a=(o-r.weekStartsOn+8)%7||7;switch(n){case"e":return String(a);case"ee":return H(a,2);case"eo":return e.ordinalNumber(a,{unit:"day"});case"eee":return e.day(o,{width:"abbreviated",context:"formatting"});case"eeeee":return e.day(o,{width:"narrow",context:"formatting"});case"eeeeee":return e.day(o,{width:"short",context:"formatting"});default:return e.day(o,{width:"wide",context:"formatting"})}},c:function(t,n,e,r){var o=t.getUTCDay(),a=(o-r.weekStartsOn+8)%7||7;switch(n){case"c":return String(a);case"cc":return H(a,n.length);case"co":return e.ordinalNumber(a,{unit:"day"});case"ccc":return e.day(o,{width:"abbreviated",context:"standalone"});case"ccccc":return e.day(o,{width:"narrow",context:"standalone"});case"cccccc":return e.day(o,{width:"short",context:"standalone"});default:return e.day(o,{width:"wide",context:"standalone"})}},i:function(t,n,e){var r=t.getUTCDay(),o=0===r?7:r;switch(n){case"i":return String(o);case"ii":return H(o,n.length);case"io":return e.ordinalNumber(o,{unit:"day"});case"iii":return e.day(r,{width:"abbreviated",context:"formatting"});case"iiiii":return e.day(r,{width:"narrow",context:"formatting"});case"iiiiii":return e.day(r,{width:"short",context:"formatting"});default:return e.day(r,{width:"wide",context:"formatting"})}},a:function(t,n,e){var r=t.getUTCHours()/12>=1?"pm":"am";switch(n){case"a":case"aa":return e.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"aaa":return e.dayPeriod(r,{width:"abbreviated",context:"formatting"}).toLowerCase();case"aaaaa":return e.dayPeriod(r,{width:"narrow",context:"formatting"});default:return e.dayPeriod(r,{width:"wide",context:"formatting"})}},b:function(t,n,e){var r,o=t.getUTCHours();switch(r=12===o?"noon":0===o?"midnight":o/12>=1?"pm":"am",n){case"b":case"bb":return e.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"bbb":return e.dayPeriod(r,{width:"abbreviated",context:"formatting"}).toLowerCase();case"bbbbb":return e.dayPeriod(r,{width:"narrow",context:"formatting"});default:return e.dayPeriod(r,{width:"wide",context:"formatting"})}},B:function(t,n,e){var r,o=t.getUTCHours();switch(r=o>=17?"evening":o>=12?"afternoon":o>=4?"morning":"night",n){case"B":case"BB":case"BBB":return e.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"BBBBB":return e.dayPeriod(r,{width:"narrow",context:"formatting"});default:return e.dayPeriod(r,{width:"wide",context:"formatting"})}},h:function(t,n,e){if("ho"===n){var r=t.getUTCHours()%12;return 0===r&&(r=12),e.ordinalNumber(r,{unit:"hour"})}return X.h(t,n)},H:function(t,n,e){return"Ho"===n?e.ordinalNumber(t.getUTCHours(),{unit:"hour"}):X.H(t,n)},K:function(t,n,e){var r=t.getUTCHours()%12;return"Ko"===n?e.ordinalNumber(r,{unit:"hour"}):H(r,n.length)},k:function(t,n,e){var r=t.getUTCHours();return 0===r&&(r=24),"ko"===n?e.ordinalNumber(r,{unit:"hour"}):H(r,n.length)},m:function(t,n,e){return"mo"===n?e.ordinalNumber(t.getUTCMinutes(),{unit:"minute"}):X.m(t,n)},s:function(t,n,e){return"so"===n?e.ordinalNumber(t.getUTCSeconds(),{unit:"second"}):X.s(t,n)},S:function(t,n){return X.S(t,n)},X:function(t,n,e,r){var o=(r._originalDate||t).getTimezoneOffset();if(0===o)return"Z";switch(n){case"X":return Q(o);case"XXXX":case"XX":return V(o);default:return V(o,":")}},x:function(t,n,e,r){var o=(r._originalDate||t).getTimezoneOffset();switch(n){case"x":return Q(o);case"xxxx":case"xx":return V(o);default:return V(o,":")}},O:function(t,n,e,r){var o=(r._originalDate||t).getTimezoneOffset();switch(n){case"O":case"OO":case"OOO":return"GMT"+F(o,":");default:return"GMT"+V(o,":")}},z:function(t,n,e,r){var o=(r._originalDate||t).getTimezoneOffset();switch(n){case"z":case"zz":case"zzz":return"GMT"+F(o,":");default:return"GMT"+V(o,":")}},t:function(t,n,e,r){var o=r._originalDate||t;return H(Math.floor(o.getTime()/1e3),n.length)},T:function(t,n,e,r){return H((r._originalDate||t).getTime(),n.length)}};function F(t,n){var e=t>0?"-":"+",r=Math.abs(t),o=Math.floor(r/60),a=r%60;if(0===a)return e+String(o);var i=n||"";return e+String(o)+i+H(a,2)}function Q(t,n){return t%60==0?(t>0?"-":"+")+H(Math.abs(t)/60,2):V(t,n)}function V(t,n){var e=n||"",r=t>0?"-":"+",o=Math.abs(t);return r+H(Math.floor(o/60),2)+e+H(o%60,2)}const $=G;var J=function(t,n){switch(t){case"P":return n.date({width:"short"});case"PP":return n.date({width:"medium"});case"PPP":return n.date({width:"long"});default:return n.date({width:"full"})}},_=function(t,n){switch(t){case"p":return n.time({width:"short"});case"pp":return n.time({width:"medium"});case"ppp":return n.time({width:"long"});default:return n.time({width:"full"})}};const K={p:_,P:function(t,n){var e,r=t.match(/(P+)(p+)?/)||[],o=r[1],a=r[2];if(!a)return J(t,n);switch(o){case"P":e=n.dateTime({width:"short"});break;case"PP":e=n.dateTime({width:"medium"});break;case"PPP":e=n.dateTime({width:"long"});break;default:e=n.dateTime({width:"full"})}return e.replace("{{date}}",J(o,n)).replace("{{time}}",_(a,n))}};var tt=["D","DD"],nt=["YY","YYYY"];function et(t,n,e){if("YYYY"===t)throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(n,"`) for formatting years to the input `").concat(e,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("YY"===t)throw new RangeError("Use `yy` instead of `YY` (in `".concat(n,"`) for formatting years to the input `").concat(e,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("D"===t)throw new RangeError("Use `d` instead of `D` (in `".concat(n,"`) for formatting days of the month to the input `").concat(e,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("DD"===t)throw new RangeError("Use `dd` instead of `DD` (in `".concat(n,"`) for formatting days of the month to the input `").concat(e,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"))}var rt={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function ot(t){return function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=n.width?String(n.width):t.defaultWidth;return t.formats[e]||t.formats[t.defaultWidth]}}const at={date:ot({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:ot({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:ot({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})};var it={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function At(t){return function(n,e){var r;if("formatting"===(null!=e&&e.context?String(e.context):"standalone")&&t.formattingValues){var o=t.defaultFormattingWidth||t.defaultWidth,a=null!=e&&e.width?String(e.width):o;r=t.formattingValues[a]||t.formattingValues[o]}else{var i=t.defaultWidth,A=null!=e&&e.width?String(e.width):t.defaultWidth;r=t.values[A]||t.values[i]}return r[t.argumentCallback?t.argumentCallback(n):n]}}const ct={ordinalNumber:function(t,n){var e=Number(t),r=e%100;if(r>20||r<10)switch(r%10){case 1:return e+"st";case 2:return e+"nd";case 3:return e+"rd"}return e+"th"},era:At({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:At({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(t){return t-1}}),month:At({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:At({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:At({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})};function st(t){return function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=e.width,o=r&&t.matchPatterns[r]||t.matchPatterns[t.defaultMatchWidth],a=n.match(o);if(!a)return null;var i,A=a[0],c=r&&t.parsePatterns[r]||t.parsePatterns[t.defaultParseWidth],s=Array.isArray(c)?function(t,n){for(var e=0;e<t.length;e++)if(t[e].test(A))return e}(c):function(t,n){for(var e in t)if(t.hasOwnProperty(e)&&t[e].test(A))return e}(c);return i=t.valueCallback?t.valueCallback(s):s,{value:i=e.valueCallback?e.valueCallback(i):i,rest:n.slice(A.length)}}}var dt,lt={ordinalNumber:(dt={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(t){return parseInt(t,10)}},function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},e=t.match(dt.matchPattern);if(!e)return null;var r=e[0],o=t.match(dt.parsePattern);if(!o)return null;var a=dt.valueCallback?dt.valueCallback(o[0]):o[0];return{value:a=n.valueCallback?n.valueCallback(a):a,rest:t.slice(r.length)}}),era:st({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:st({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(t){return t+1}}),month:st({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:st({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:st({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})};const Ct={code:"en-US",formatDistance:function(t,n,e){var r,o=rt[t];return r="string"==typeof o?o:1===n?o.one:o.other.replace("{{count}}",n.toString()),null!=e&&e.addSuffix?e.comparison&&e.comparison>0?"in "+r:r+" ago":r},formatLong:at,formatRelative:function(t,n,e,r){return it[t]},localize:ct,match:lt,options:{weekStartsOn:0,firstWeekContainsDate:1}};var ut=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,pt=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,ht=/^'([^]*?)'?$/,mt=/''/g,gt=/[a-zA-Z]/;function ft(t,n,e){var r,o,a,i,A,c,s,d,l,C,u,p,h,m,g,f,b,v;w(2,arguments);var x=String(n),y=Z(),B=null!==(r=null!==(o=null==e?void 0:e.locale)&&void 0!==o?o:y.locale)&&void 0!==r?r:Ct,k=S(null!==(a=null!==(i=null!==(A=null!==(c=null==e?void 0:e.firstWeekContainsDate)&&void 0!==c?c:null==e||null===(s=e.locale)||void 0===s||null===(d=s.options)||void 0===d?void 0:d.firstWeekContainsDate)&&void 0!==A?A:y.firstWeekContainsDate)&&void 0!==i?i:null===(l=y.locale)||void 0===l||null===(C=l.options)||void 0===C?void 0:C.firstWeekContainsDate)&&void 0!==a?a:1);if(!(k>=1&&k<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var T=S(null!==(u=null!==(p=null!==(h=null!==(m=null==e?void 0:e.weekStartsOn)&&void 0!==m?m:null==e||null===(g=e.locale)||void 0===g||null===(f=g.options)||void 0===f?void 0:f.weekStartsOn)&&void 0!==h?h:y.weekStartsOn)&&void 0!==p?p:null===(b=y.locale)||void 0===b||null===(v=b.options)||void 0===v?void 0:v.weekStartsOn)&&void 0!==u?u:0);if(!(T>=0&&T<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");if(!B.localize)throw new RangeError("locale must contain localize property");if(!B.formatLong)throw new RangeError("locale must contain formatLong property");var E=N(t);if(!function(t){if(w(1,arguments),!function(t){return w(1,arguments),t instanceof Date||"object"===L(t)&&"[object Date]"===Object.prototype.toString.call(t)}(t)&&"number"!=typeof t)return!1;var n=N(t);return!isNaN(Number(n))}(E))throw new RangeError("Invalid time value");var j=function(t){var n=new Date(Date.UTC(t.getFullYear(),t.getMonth(),t.getDate(),t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds()));return n.setUTCFullYear(t.getFullYear()),t.getTime()-n.getTime()}(E),W=function(t,n){return w(2,arguments),function(t,n){w(2,arguments);var e=N(t).getTime(),r=S(n);return new Date(e+r)}(t,-S(n))}(E,j),D={firstWeekContainsDate:k,weekStartsOn:T,locale:B,_originalDate:E};return x.match(pt).map((function(t){var n=t[0];return"p"===n||"P"===n?(0,K[n])(t,B.formatLong):t})).join("").match(ut).map((function(r){if("''"===r)return"'";var o,a,i=r[0];if("'"===i)return(a=(o=r).match(ht))?a[1].replace(mt,"'"):o;var A,c=$[i];if(c)return null!=e&&e.useAdditionalWeekYearTokens||(A=r,-1===nt.indexOf(A))||et(r,n,String(t)),null!=e&&e.useAdditionalDayOfYearTokens||!function(t){return-1!==tt.indexOf(t)}(r)||et(r,n,String(t)),c(W,r,B.localize,D);if(i.match(gt))throw new RangeError("Format string contains an unescaped latin alphabet character `"+i+"`");return r})).join("")}function bt(t){return console.log(t),ft(function(t,n){var e;w(1,arguments);var r=S(null!==(e=null==n?void 0:n.additionalDigits)&&void 0!==e?e:2);if(2!==r&&1!==r&&0!==r)throw new RangeError("additionalDigits must be 0, 1 or 2");if("string"!=typeof t&&"[object String]"!==Object.prototype.toString.call(t))return new Date(NaN);var o,a=function(t){var n,e={},r=t.split(T.dateTimeDelimiter);if(r.length>2)return e;if(/:/.test(r[0])?n=r[0]:(e.date=r[0],n=r[1],T.timeZoneDelimiter.test(e.date)&&(e.date=t.split(T.timeZoneDelimiter)[0],n=t.substr(e.date.length,t.length))),n){var o=T.timezone.exec(n);o?(e.time=n.replace(o[1],""),e.timezone=o[1]):e.time=n}return e}(t);if(a.date){var i=function(t,n){var e=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+n)+"})|(\\d{2}|[+-]\\d{"+(2+n)+"})$)"),r=t.match(e);if(!r)return{year:NaN,restDateString:""};var o=r[1]?parseInt(r[1]):null,a=r[2]?parseInt(r[2]):null;return{year:null===a?o:100*a,restDateString:t.slice((r[1]||r[2]).length)}}(a.date,r);o=function(t,n){if(null===n)return new Date(NaN);var e=t.match(E);if(!e)return new Date(NaN);var r=!!e[4],o=D(e[1]),a=D(e[2])-1,i=D(e[3]),A=D(e[4]),c=D(e[5])-1;if(r)return function(t,n,e){return n>=1&&n<=53&&e>=0&&e<=6}(0,A,c)?function(t,n,e){var r=new Date(0);r.setUTCFullYear(t,0,4);var o=7*(n-1)+e+1-(r.getUTCDay()||7);return r.setUTCDate(r.getUTCDate()+o),r}(n,A,c):new Date(NaN);var s=new Date(0);return function(t,n,e){return n>=0&&n<=11&&e>=1&&e<=(Y[n]||(U(t)?29:28))}(n,a,i)&&function(t,n){return n>=1&&n<=(U(t)?366:365)}(n,o)?(s.setUTCFullYear(n,a,Math.max(o,i)),s):new Date(NaN)}(i.restDateString,i.year)}if(!o||isNaN(o.getTime()))return new Date(NaN);var A,c=o.getTime(),s=0;if(a.time&&(s=function(t){var n=t.match(j);if(!n)return NaN;var e=M(n[1]),r=M(n[2]),o=M(n[3]);return function(t,n,e){return 24===t?0===n&&0===e:e>=0&&e<60&&n>=0&&n<60&&t>=0&&t<25}(e,r,o)?e*k+r*B+1e3*o:NaN}(a.time),isNaN(s)))return new Date(NaN);if(!a.timezone){var d=new Date(c+s),l=new Date(0);return l.setFullYear(d.getUTCFullYear(),d.getUTCMonth(),d.getUTCDate()),l.setHours(d.getUTCHours(),d.getUTCMinutes(),d.getUTCSeconds(),d.getUTCMilliseconds()),l}return A=function(t){if("Z"===t)return 0;var n=t.match(W);if(!n)return 0;var e="+"===n[1]?-1:1,r=parseInt(n[2]),o=n[3]&&parseInt(n[3])||0;return function(t,n){return n>=0&&n<=59}(0,o)?e*(r*k+o*B):NaN}(a.timezone),isNaN(A)?new Date(NaN):new Date(c+s+A)}(t),"LLL d, yyyy")}function vt(){const t=new Date,n=String(t.getDate()).padStart(2,"0"),e=String(t.getMonth()+1).padStart(2,"0"),r=`${t.getFullYear()}-${e}-${n}`;return console.log(r),r}const xt=e.p+"213c9439605ca221bc03.svg",yt=e.p+"f7c9015f0bf618a577c2.svg",Bt=e.p+"4b9ed87478f76a8ca0eb.jpeg";function kt(t){const n=Mt("div","task-info-container"),e=Mt("div","task-top-container"),r=Mt("div","task-inner-left-container"),o=Mt("div","task-inner-right-container"),a=Mt("div","task-descr-container"),i=function(){const t="checkbox-"+Et++,n=Mt("div","roundCheckBtn"),e=function(t,n,e){const r=document.createElement("input");return r.setAttribute("type","checkbox"),r.setAttribute("id",e),r}(0,0,t),r=function(t,n){const e=document.createElement("label");return e.setAttribute("for",n),e}(0,t);return n.appendChild(e),n.appendChild(r),n}();r.appendChild(i);const A=Mt("p","task-title");A.textContent=t.title,r.appendChild(A);const c=Mt("p","task-description");t.description&&(c.textContent=t.description,a.appendChild(c));const s=Mt("img","priority-flag");St(s,t.priority),o.appendChild(s);const d=Mt("p","task-date");if(t.date){const n=bt(t.date);d.textContent=n,o.appendChild(d)}const l=function(t){const n=document.createElement("img");return n.src=x,n.classList.add("trash-button"),n.addEventListener("click",(()=>function(t){const n=gn.find((n=>n.getTasks().includes(t))),e=n.getTasks().indexOf(t);-1!==e&&(n.getTasks().splice(e,1),document.querySelectorAll(".task-info-container").forEach((n=>{n.querySelector(".task-title").textContent===t.title&&n.remove()}))),wt()}(t))),n}(t);o.appendChild(l),e.appendChild(r),e.appendChild(o),n.appendChild(e),n.appendChild(a),Yt.appendChild(n),function(t,n,e){const r=e.getStatus(),o=t.querySelector("input");r?(o.checked=!0,n.classList.add("taskComplete")):(o.checked=!1,n.classList.remove("taskComplete"))}(i,n,t),function(t,n,e){const r=t.querySelector("input");r.addEventListener("change",jt.bind(null,r,n,e)),Wt.push({checkboxInput:r,checkboxListener:jt})}(i,n,t)}function wt(){if(Nt&&!Yt.hasChildNodes()){const t=Mt("div","horrayMessage"),n=Mt("p","text1"),e=Mt("p","text2"),r=Mt("img","mob-pyscho-calendar");n.textContent="HORRAY!",e.textContent="No tasks to do :)",r.src=Bt,t.appendChild(n),t.appendChild(e),t.appendChild(r),Yt.appendChild(t)}}function St(t,n){switch(n){case"high-priority":Tt(t),t.classList.add("flag-high"),t.src=xt;break;case"medium-priority":Tt(t),t.classList.add("flag-medium"),t.src=xt;break;case"low-priority":Tt(t),t.classList.add("flag-low"),t.src=xt;break;default:Tt(t),t.src=yt,t.classList.add("flag-none")}}function Tt(t){t.classList.remove("flag-high"),t.classList.remove("flag-medium"),t.classList.remove("flag-low")}let Et=0;const jt=function(t,n,e){t.checked?(e.setStatus(!0),n.classList.add("taskComplete")):(e.setStatus(!1),n.classList.remove("taskComplete"))},Wt=[];function Dt(){Wt.forEach((t=>{const{checkboxInput:n,checkboxListener:e}=t;n.removeEventListener("change",e)})),Yt.textContent=""}function Mt(t,n){const e=document.createElement(t);return e.classList.add(n),e}const Yt=document.querySelector(".task-list"),Ut=document.querySelector(".add-task-btn");let Lt=null,Nt=!0;function Pt(t,n){const e=document.querySelector(".main-title"),r=document.querySelector(".side-nav"),o=document.querySelector(".hamburger");if(r.classList.remove("active"),o.classList.remove("active"),"mainTabInfo"==n){Nt=!0,Lt=t.target.id;const n=t.target;Zt(),Ht(),function(t){t.classList.add("active")}(n),function(t){switch(t){case"All":!function(){Dt();for(let t=0;t<gn.length;t++)qt(gn[t].title)}(),wt();break;case"Today":!function(){const t=vt();let n=[];function e(t,n){const e=n.getTasks().filter((n=>n.date===t));return e}Dt();for(let r=0;r<gn.length;r++){const o=e(t,gn[r]);n=n.concat(o)}for(let t=0;t<n.length;t++)kt(n[t])}(),wt();break;case"Upcoming":!function(){const t=vt();let n=[];function e(n,e){const r=e.getTasks().filter((n=>!!n.date&&new Date(n.date)>new Date(t)));return r}Dt();for(let t=0;t<gn.length;t++){const r=e(0,gn[t]);n=n.concat(r)}for(let t=0;t<n.length;t++)kt(n[t])}(),wt();break;case"Completed":Dt(),gn.forEach((t=>{t.getTasks().forEach((t=>{t.getStatus()&&kt(t)}))}))}}(Lt)}else{Nt=!1,Ht();const n=t.target.closest("[data-project-id]");n&&(Lt=n.getAttribute("data-project-id"),Dt(),qt(Lt),Ot())}e.textContent=Lt,zt()}function qt(t){const n=gn.find((n=>n.title==t));n&&n.getTasks().forEach((t=>kt(t)))}function Ot(){Ut.classList.remove("hidden"),Ut.addEventListener("click",It)}function Zt(){Ut.classList.add("hidden"),Ut.removeEventListener("click",It)}function It(){!function(t){document.querySelector(".task-modal-container").classList.remove("hidden"),dn("addTask",t)}(Lt),Zt()}function zt(){const t=document.querySelector(".task-modal-container");document.getElementById("task-name").value="",document.getElementById("task-description").value="",t.classList.add("hidden")}function Ht(){document.querySelectorAll(".navtab").forEach((t=>t.classList.remove("active")))}function Rt(){const t=gn.map((t=>({title:t.title,tasks:t.getTasks()}))),n=JSON.stringify(t);localStorage.setItem("projectList",n),console.log(JSON.parse(localStorage.getItem("projectList")))}const Xt=document.querySelector(".project-modal-background"),Gt=document.querySelector(".project-modal-container form"),Ft=document.querySelector(".task-modal-container form"),Qt=document.querySelector(".modal-project-btn"),Vt=document.querySelector(".modal-cancel-btn"),$t=document.getElementById("errorText"),Jt=document.querySelector(".priority-container"),_t=document.querySelector(".priority-container p"),Kt=document.querySelector(".dropdown-container"),tn=document.querySelectorAll(".dropdown li"),nn=document.querySelector(".priority-container img"),en=document.querySelector(".due-date-container"),rn=document.getElementById("date-input"),on=document.querySelector(".due-date-container p");let an=null,An=null,cn=null,sn=!1;function dn(t,n=null){switch(function(t){$t.style.display="none",an=t,An=null,cn=null,on.textContent="Due Date",_t.textContent="Priority",nn.src=yt,Tt(nn)}(n),t){case"addProject":sn=!1,ln||(Qt.addEventListener("click",Cn),Vt.addEventListener("click",pn),ln=!0);break;case"editProject":sn=!0,function(){Qt.removeEventListener("click",Cn),Qt.addEventListener("click",Cn);const t=gn.find((t=>t.title===an));t&&(document.getElementById("project-name").value=t.title)}();break;case"addTask":!function(){const t=document.querySelector(".submit-close-container.mobile .submit-task-btn"),n=document.querySelectorAll(".cancel-task-btn");function e(){let t=!1;return{submitHandler:function(t){t.preventDefault(),Ft.checkValidity()&&hn()},submitMobileHandler:function(){Ft.checkValidity()?($t.style.display="none",hn()):$t.style.display="block"},cancelHandler:function(){zt(),Ot()},priorityHandler:function(t){An=t.target.closest("[data-priority]").getAttribute("data-priority"),St(nn,An),_t.textContent=function(t){return"high-priority"==t?"High":"medium-priority"==t?"Medium":"low-priority"==t?"Low":void 0}(An),Kt.classList.remove("active"),t.stopPropagation()},dateHandler:function(){rn.showPicker(),t||rn.addEventListener("input",(()=>{cn=rn.value;const n=bt(cn);on.textContent=n,t=!0}))}}}mn||(Jt.addEventListener("click",(()=>{Kt.classList.toggle("active")})),mn=!0);const r=e();Ft.removeEventListener("submit",r.submitHandler),t.removeEventListener("click",r.submitMobileHandler),n.forEach((t=>t.removeEventListener("click",r.cancelHandler))),tn.forEach((t=>{t.removeEventListener("click",r.priorityHandler)})),en.removeEventListener("click",r.dateHandler);const o=e();Ft.addEventListener("submit",o.submitHandler),t.addEventListener("click",o.submitMobileHandler),n.forEach((t=>t.addEventListener("click",o.cancelHandler))),tn.forEach((t=>{t.addEventListener("click",o.priorityHandler)})),en.addEventListener("click",o.dateHandler)}()}}let ln=!1;function Cn(t){if(Gt.checkValidity()){t.preventDefault();const n=document.getElementById("project-name").value;sn?function(t){const n=gn.findIndex((t=>t.title===an));-1!==n&&(gn[n].title=t,function(t,n){const e=document.querySelector(`[data-project-id="${t}"]`);e.querySelector(".project-title").textContent=n,e.setAttribute("data-project-id",n)}(an,t))}(n):un(n),pn(),Rt()}}function un(t){gn.push(function(t){let n=[];return{title:t,setTask(t,e=null,r=null,o=null){const a=function(t,n=null,e=null,r=null){let o=!1;return{title:t,description:n,priority:e,date:r,getStatus:()=>o,setStatus(t){o=t}}}(t,e,r,o);n.push(a)},getTasks:()=>n}}(t)),function(t){const n=xn("div","project-link-div");n.setAttribute("data-project-id",t),n.setAttribute("tabindex",0);const e=xn("p","project-title");e.textContent=t,n.appendChild(e);const r=xn("div","icon-divider");(function(t){const n=xn("img","editIcon");n.src=y,n.addEventListener("click",(t=>{const n=t.target.parentNode.parentNode.getAttribute("data-project-id");vn("editProject"),dn("editProject",n)})),t.appendChild(n)})(r),function(t){const n=xn("img","deleteIcon");n.src=x,n.addEventListener("click",(t=>{!function(t){const n=document.querySelector(`[data-project-id="${t}"]`);n&&(gn=gn.filter((n=>n.title!=t)),Rt(),n.remove())}(t.target.parentNode.parentNode.getAttribute("data-project-id"))})),t.appendChild(n)}(r),n.appendChild(r),fn.appendChild(n),n.addEventListener("click",(t=>Pt(t,"projectTabInfo")))}(t)}function pn(){document.getElementById("project-name").value="",Xt.classList.add("hidden")}function hn(){const t=gn.find((t=>t.title==an)),n=document.getElementById("task-name").value,e=document.getElementById("task-description").value,r=cn,o=An;t.setTask(n,e,o,r),Dt(),qt(an),zt(),Ot()}let mn=!1,gn=[];const fn=document.querySelector(".project-container"),bn=document.querySelector(".project-modal-background");function vn(t){"addProject"===t?(document.querySelector(".project-modal-header").textContent="New Project",document.querySelector(".modal-project-btn").textContent="Add"):(document.querySelector(".project-modal-header").textContent="Edit Project",document.querySelector(".modal-project-btn").textContent="Edit"),bn.classList.remove("hidden")}function xn(t,n){const e=document.createElement(t);return e.classList.add(n),e}const yn=document.querySelector(".hamburger"),Bn=document.querySelector(".side-nav"),kn=document.querySelector(".new-project-btn"),wn=document.querySelectorAll(".navtab");!function(){const t=document.querySelector(".main-title"),n=document.getElementById("All");t.textContent="All",n.classList.add("active"),wt(),function(){const t=localStorage.getItem("projectList");if(t){const n=JSON.parse(t).map((t=>{const n=t.tasks,e=un(t.title);return n.forEach((t=>e.setTask(t.title,t.description,t.priority,t.date))),e}));console.log("This array of objects:",n);const e=n[0];console.log(e)}else console.log("No serialized object found in local storage.")}()}(),wn.forEach((t=>t.addEventListener("click",(t=>Pt(t,"mainTabInfo"))))),yn.addEventListener("click",(()=>{yn.classList.toggle("active"),Bn.classList.toggle("active")})),kn.addEventListener("click",(()=>{vn("addProject"),dn("addProject")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,